



<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=2">
<meta name="theme-color" content="#FFF">
  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon.png">

<link rel="icon" type="image/ico" sizes="32x32" href="/images/favicon.ico">
  <meta http-equiv="Cache-Control" content="no-transform">
  <meta http-equiv="Cache-Control" content="no-siteapp">


<link rel="alternate" type="application/rss+xml" title="" href="https://monkeyhh.top/rss.xml" />
<link rel="alternate" type="application/atom+xml" title="" href="https://monkeyhh.top/atom.xml" />
<link rel="alternate" type="application/json" title="" href="https://monkeyhh.top/feed.json" />

<link rel="stylesheet" href="//fonts.googleapis.com/css?family=Mulish:300,300italic,400,400italic,700,700italic%7CFredericka%20the%20Great:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20JP:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20SC:300,300italic,400,400italic,700,700italic%7CInconsolata:300,300italic,400,400italic,700,700italic&display=swap&subset=latin,latin-ext">

<link rel="stylesheet" href="/css/app.css?v=0.2.5">

  
  <meta name="keywords" content="Linux" />


<link rel="canonical" href="https://monkeyhh.top/BackEnd/Linux/BackEnd/Linux/Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86">



  <title>
Linux基础知识 - Linux - BackEnd |
Monkey's Blog = </title>
<meta name="generator" content="Hexo 5.4.0"></head>
<body itemscope itemtype="http://schema.org/WebPage">
  <div id="loading">
    <div class="cat">
      <div class="body"></div>
      <div class="head">
        <div class="face"></div>
      </div>
      <div class="foot">
        <div class="tummy-end"></div>
        <div class="bottom"></div>
        <div class="legs left"></div>
        <div class="legs right"></div>
      </div>
      <div class="paw">
        <div class="hands left"></div>
        <div class="hands right"></div>
      </div>
    </div>
  </div>
  <div id="container">
    <header id="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="inner">
        <div id="brand">
          <div class="pjax">
          
  <h1 itemprop="name headline">Linux基础知识
  </h1>
  
<div class="meta">
  <span class="item" title="Created: 2021-10-01 09:28:32">
    <span class="icon">
      <i class="ic i-calendar"></i>
    </span>
    <span class="text">Posted on</span>
    <time itemprop="dateCreated datePublished" datetime="2021-10-01T09:28:32+08:00">2021-10-01</time>
  </span>
  <span class="item" title="Symbols count in article">
    <span class="icon">
      <i class="ic i-pen"></i>
    </span>
    <span class="text">Symbols count in article</span>
    <span>26k</span>
    <span class="text">words</span>
  </span>
  <span class="item" title="Reading time">
    <span class="icon">
      <i class="ic i-clock"></i>
    </span>
    <span class="text">Reading time</span>
    <span>24 mins.</span>
  </span>
</div>


          </div>
        </div>
        <nav id="nav">
  <div class="inner">
    <div class="toggle">
      <div class="lines" aria-label="Toggle navigation bar">
        <span class="line"></span>
        <span class="line"></span>
        <span class="line"></span>
      </div>
    </div>
    <ul class="menu">
      <li class="item title"><a href="/" rel="start">Monkey's Blog</a></li>
    </ul>
    <ul class="right">
      <li class="item theme">
        <i class="ic i-sun"></i>
      </li>
      <li class="item search">
        <i class="ic i-search"></i>
      </li>
    </ul>
  </div>
</nav>

      </div>
      <div id="imgs" class="pjax">
          <img src="https://gitee.com/monkey-HH/picBed/raw/master/picbed/img/202112301958270.jpeg">
      </div>
    </header>
    <div id="waves">
      <svg class="waves" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28" preserveAspectRatio="none" shape-rendering="auto">
        <defs>
          <path id="gentle-wave" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z" />
        </defs>
        <g class="parallax">
          <use xlink:href="#gentle-wave" x="48" y="0" />
          <use xlink:href="#gentle-wave" x="48" y="3" />
          <use xlink:href="#gentle-wave" x="48" y="5" />
          <use xlink:href="#gentle-wave" x="48" y="7" />
        </g>
      </svg>
    </div>
    <main>
      <div class="inner">
        <div id="main" class="pjax">
          
  <div class="article wrap">
    
<div class="breadcrumb" itemscope itemtype="https://schema.org/BreadcrumbList">
<i class="ic i-home"></i>
<span><a href="/">Home</a></span><i class="ic i-angle-right"></i>
<span  itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/categories/BackEnd/" itemprop="item" rel="index" title="In BackEnd"><span itemprop="name">BackEnd</span></a>
<meta itemprop="position" content="1" /></span>
<i class="ic i-angle-right"></i>
<span  class="current" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/categories/BackEnd/Linux/" itemprop="item" rel="index" title="In Linux"><span itemprop="name">Linux</span></a>
<meta itemprop="position" content="2" /></span>
</div>

    <article itemscope itemtype="http://schema.org/Article" class="post block" lang="en">
  <link itemprop="mainEntityOfPage" href="https://monkeyhh.top/BackEnd/Linux/BackEnd/Linux/Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86">

  <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
    <meta itemprop="image" content="/images/avatar.jpg">
    <meta itemprop="name" content="Monkey-HH">
    <meta itemprop="description" content=", Learn, share, make progress">
  </span>

  <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
    <meta itemprop="name" content="">
  </span>

  <div class="body md" itemprop="articleBody">
    

    <h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>本文主要是自己学习Linux的一些知识点总结。</p>
<h1 id="Linux介绍"><a href="#Linux介绍" class="headerlink" title="Linux介绍"></a>Linux介绍</h1><p>Linux并不是一个系统，而是一个**<span class="exturl" data-url="aHR0cHM6Ly93d3cua2VybmVsLm9yZy8=">内核</span>**，我们常说Linux系统事实上是Linux发行版（Linux distribution）。</p>
<p>Linux的作者为Linus Torvalds，Linux的意思就是Linus的Unix。</p>
<h2 id="发展历史"><a href="#发展历史" class="headerlink" title="发展历史"></a>发展历史</h2><p>聊到Linux，就不离开Unix，Unix是在贝尔实验室里产生的，由肯•汤普森（Ken Thompson）和丹尼斯•里奇（Dennis Ritchie）发明。它的部分技术来源可追溯到从 1965 年开始的 Multics 工程计划，但由于 Multics 工程计划所追求的目标太庞大、太复杂，以至于它的开发人员都不知道要做成什么样子，最终以失败收场。后来以肯•汤普森为首的贝尔实验室研究人员吸取了Multics工程计划失败的经验教训，于1969年实现了一种分时操作系统的雏形，1970 年该系统正式取名为 UNIX。</p>
<p>贝尔实验室搞出来的Unix其实只是一个内核，所谓内核并不是操作系统，我感觉它更像是一组库函数，或者说一套标准，不管你计算机怎么用都是通过软件来操作硬件，而内核就是提供了一些方法来让你能都管理硬件，比如对文件从磁盘上进行读写，再或者通过TPC/IP这样的协议进行远程的通信，而自打Unix出世以后，各大公司都觉得这东西有搞头，于是纷纷推出自己的基于Unix的操作系统，比如AT&amp;T的system V，还有伯克利的BSD，这就产生了一个问题，UNIX是<strong>商业软件</strong>，是需要付费使用的，且各公司实现的基于Unix的系统都不开放源码，同时<strong>Unix的设计初衷是多用户，多任务，所以它被更多得部署在服务器上</strong>，大多数UNIX系统如AIX、HP-UX等是无法安装在x86服务器和个人计算机上的，于是荷兰教授Andrew S·Tanenbaum为了方便教学，设计并实现了一个小型的类Unix操作系统Minix。</p>
<p>Minix虽然是不错的教学工具，但是却缺乏使用价值，毕竟太小了，离所谓的完善的操作系统还差很远。</p>
<p>1991年，芬兰赫尔辛基大学的学生 Linus Torvalds(linux之父)对Minix非常感兴趣，但是受限于 Minix 的许可证，他不能轻易修改和发布该系统的源代码，这让他耿耿于怀，对作者的这种设计理念感到失望。于是 Linus 决定以Minix为起点，基本按照 Unix 的设计，并且吸取各种版本的 Unix 职场，在 PC 机上实现，开发一个真正实用的类Unix内核——Linux。</p>
<h2 id="特点和优势"><a href="#特点和优势" class="headerlink" title="特点和优势"></a>特点和优势</h2><p>无图形化界面，但适用于服务器端，高效。</p>
<h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><ul>
<li>个人桌面领域：比较弱，打不过Windows</li>
<li>服务器领域：无敌！</li>
<li>嵌入式领域：linux运行稳定、对网络的良好支持性、低成本,且可以根据需要进行软件裁剪,内核最小可以达到几百KB等特点,使其近些年来在嵌入式领域的应用得到非常大的提高。主要应用:机顶盒、数字电视、网络电话、程控交换机、手机、PDA、 智能家居、智能硬件等都是其应用领域。<br>以后在物联网中应用会更加广泛。</li>
</ul>
<h2 id="常见Linux发行版"><a href="#常见Linux发行版" class="headerlink" title="常见Linux发行版"></a>常见Linux发行版</h2><p>常见的发行版有：Ubuntu(乌班图)、RedHat(红帽)、 CentOS、 Debain[蝶变]、Fedora、SuSE、 OpenSUSE等</p>
<h2 id="何为开源、GNU"><a href="#何为开源、GNU" class="headerlink" title="何为开源、GNU"></a>何为开源、GNU</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZ251Lm9yZy8=">GNU计划</span>，是Richard Stallman由在1983年9月27日公开发起的，它的目标是创建一套完全自由的操作系统。 理查德·斯托曼最早是在net.unix-wizards新闻组上公布该消息，并附带一份《GNU宣言》等解释为何发起该计划的文章，其中一个理由就是要“重现当年软件界合作互助的团结精神”。 </p>
<p>他认为在自由的时代用户应该免费享有对软件源代码阅读、修改的权利。软件公司可以靠提供服务和训练获得盈利。</p>
<p>他于1989年与一群律师起草了广为使用的GNU通用公共协议证书（GNU General Public License, GNU GPL），创造性地提出了“反版权”（或“版权属左”，或“开权”，copyleft）的概念。 同时，GNU计划中除了最关键的Hurd操作系统内核之外，其他绝大多数软件已经完成。</p>
<p>1991年芬兰大学生Linus Torvalds在GPL条例下发布他自己创作的Linux操作系统内核，至此GNU计划正式完成，操作系统被命名为GNU/Linux（或简称Linux）。</p>
<p>所以可以说：</p>
<blockquote>
<p>Linux Distribution= Linux内核+实用工具(GNU)</p>
</blockquote>
<img data-src="https://gitee.com/monkey-HH/picBed/raw/master/picbed/img/202201091732595.png" alt="image-20220109173252292" style="zoom:50%;" />

<h1 id="Linux文件与目录管理"><a href="#Linux文件与目录管理" class="headerlink" title="Linux文件与目录管理"></a>Linux文件与目录管理</h1><blockquote>
<p>在Linux世界里，一切皆文件。</p>
</blockquote>
<h2 id="目录结构介绍"><a href="#目录结构介绍" class="headerlink" title="目录结构介绍"></a>目录结构介绍</h2><img data-src="https://gitee.com/monkey-HH/picBed/raw/master/picbed/img/image-20210828175655237.png" alt="image-20210828175655237" style="zoom: 67%;" />

<table>
<thead>
<tr>
<th align="center"><strong>系统目录</strong></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td align="center">/</td>
<td>系统根目录的意思</td>
</tr>
<tr>
<td align="center"><font color=#50BEFF>/boot</font></td>
<td>这里存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件。</td>
</tr>
<tr>
<td align="center"><font color=#50BEFF>/proc</font></td>
<td>proc 是 Processes(进程) 的缩写，/proc 是一种伪文件系统（也即虚拟文件系统），存储的是当前内核运行状态的一系列特殊文件，这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。这个目录的内容不在硬盘上而是在内存里</td>
</tr>
<tr>
<td align="center"><font color=#50BEFF>/srv</font></td>
<td>service的缩写，该目录存放一些服务启动之后需要提取的数据。</td>
</tr>
<tr>
<td align="center"><font color=#50BEFF>/sys</font></td>
<td>这是linux2.6内核的很大的变化，该目录下安装了2.6内核中新出现的一个文件系统sysfs</td>
</tr>
<tr>
<td align="center"><font color=#50BEFF>/run</font></td>
<td>是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。指向 /var/run 目录</td>
</tr>
<tr>
<td align="center"></td>
<td></td>
</tr>
<tr>
<td align="center"><strong>用户目录</strong></td>
<td></td>
</tr>
<tr>
<td align="center"><font color=#50BEFF>/home</font></td>
<td>每个用户都有一个自己的目录，每用useradd命令，就会在此创建一个目录</td>
</tr>
<tr>
<td align="center"><font color=#50BEFF>/root</font></td>
<td>和home相似，不过该目录为系统管理员，也称作超级权限者的用户主目录。表示为：~</td>
</tr>
<tr>
<td align="center"></td>
<td></td>
</tr>
<tr>
<td align="center"><strong>软件与命令目录</strong></td>
<td></td>
</tr>
<tr>
<td align="center"><font color=#55FFFF>/lib</font></td>
<td>动态连接共享库，类似于 Windows 里的 DLL 文件，几乎所有的应用程序都需要用到这些共享库</td>
</tr>
<tr>
<td align="center"><font color=#55FFFF>/lib64</font></td>
<td>64位版本的库。</td>
</tr>
<tr>
<td align="center"><font color=#55FFFF>/bin</font></td>
<td>⭐Binaries 的缩写, 这个目录存放着最经常使用的命令，指向/usr/bin</td>
</tr>
<tr>
<td align="center"><font color=#55FFFF>/sbin</font></td>
<td>系统管理员使用的系统管理程序,指向/usr/sbin</td>
</tr>
<tr>
<td align="center"><font color=#50BEFF>/usr</font></td>
<td>⭐unix shared resources(共享资源) 的缩写，这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录。</td>
</tr>
<tr>
<td align="center"><font color=#50BEFF>/usr/local</font></td>
<td>主机额外安装的软件存放的位置，一般是通过编译源码方式安装的程序。</td>
</tr>
<tr>
<td align="center"><font color=#50BEFF>/opt</font></td>
<td>要自行 安装额外的软件（非原本的distribution提供的），那么也能够将你的软件安 装到这里来。 不过，以前的Linux系统中，我们还是习惯放置在/usr/local目 录下呢！</td>
</tr>
<tr>
<td align="center"><font color=#50BEFF>/etc</font></td>
<td>⭐所有的系统管理所需要的配置文件和子目录，比如安装mysql数据库 my.conf</td>
</tr>
<tr>
<td align="center"><font color=#50BEFF>/var</font></td>
<td>var 是 variable(变量) 的缩写，这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</td>
</tr>
<tr>
<td align="center"><font color=#50BEFF>/tmp</font></td>
<td>temporary(临时) 的缩写这个目录是用来存放一些临时文件的</td>
</tr>
<tr>
<td align="center"><strong>设备目录</strong></td>
<td></td>
</tr>
<tr>
<td align="center"><font color=#50BEFF>/dev</font></td>
<td>dev 是 Device(设备) 的缩写, 该目录下存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的。</td>
</tr>
<tr>
<td align="center"><font color=#50BEFF>/media</font></td>
<td>linux会自动识别一些设备，包括U盘、光盘、DVD等等设备都暂时挂载于此。</td>
</tr>
<tr>
<td align="center"><font color=#50BEFF>/mnt</font></td>
<td>最初，用途与/media相同啦！只是有了/media之后，这个目录就用来暂时挂载额外设备</td>
</tr>
</tbody></table>
<blockquote>
<p>文件、文件夹与颜色的关系</p>
</blockquote>
<table>
<thead>
<tr>
<th>颜色</th>
<th>例子</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>蓝色</td>
<td><font color=#50BEFF>/boot</font></td>
<td>目录</td>
</tr>
<tr>
<td>白色</td>
<td><font color=white>/boot</font></td>
<td>普通文本文件</td>
</tr>
<tr>
<td>浅蓝色</td>
<td><font color=#55FFFF>/lib</font></td>
<td>链接文件，相当于快捷方式</td>
</tr>
<tr>
<td>绿色</td>
<td><font color=#55FF55>/cd</font></td>
<td>可执行文件</td>
</tr>
<tr>
<td>…</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="文件查看与处理"><a href="#文件查看与处理" class="headerlink" title="文件查看与处理"></a>文件查看与处理</h2><table>
<thead>
<tr>
<th>常用命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><strong>查看文件：cat/more/less</strong></td>
<td></td>
</tr>
<tr>
<td>cat file1</td>
<td>查看⽂件内容</td>
</tr>
<tr>
<td>cat -n file1</td>
<td>查看内容并标示⾏数</td>
</tr>
<tr>
<td>more file1</td>
<td>more file1</td>
</tr>
<tr>
<td>less file1</td>
<td>类似more命令，但允许反向操作</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>倒序查看文件：tac</strong></td>
<td></td>
</tr>
<tr>
<td>tac file1</td>
<td>从最后⼀⾏开始反看⽂件内容</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>查看文件开头/结尾：head/tail</strong></td>
<td></td>
</tr>
<tr>
<td>head -2 file1</td>
<td>查看⽂件前两⾏</td>
</tr>
<tr>
<td>tail -2 file1</td>
<td>查看⽂件后两⾏</td>
</tr>
<tr>
<td>tail -f /log/msg</td>
<td>实时查看添加到⽂件中的内容</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>合并文件：paste</strong></td>
<td></td>
</tr>
<tr>
<td>paste file1 file2</td>
<td>合并两个⽂件或两栏的内容</td>
</tr>
<tr>
<td>paste -d ‘+’ file1 file2</td>
<td>合并两个⽂件或两栏的内容，中间⽤”+”区分</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>文本处理：grep/sed/awk</strong></td>
<td></td>
</tr>
<tr>
<td>grep codesheep hello.txt</td>
<td>在⽂件hello.txt中查找关键词codesheep</td>
</tr>
<tr>
<td>grep ^sheep hello.txt</td>
<td>在⽂件hello.txt中查找以sheep开头的内容</td>
</tr>
<tr>
<td>grep [0-9] hello.txt</td>
<td>选择hello.txt⽂件中所有包含数字的⾏</td>
</tr>
<tr>
<td>sed ‘s/s1/s2/g’ hello.txt</td>
<td>将hello.txt⽂件中的s1替换成s2</td>
</tr>
<tr>
<td>sed ‘/^$/d’ hello.txt</td>
<td>从hello.txt⽂件中删除所有空⽩⾏</td>
</tr>
<tr>
<td>sed ‘/ *#/d; /^$/d’ hello.txt</td>
<td>从hello.txt⽂件中删除所有注释和空⽩⾏</td>
</tr>
<tr>
<td>sed -e ‘1d’ hello.txt</td>
<td>从⽂件hello.txt 中排除第⼀⾏</td>
</tr>
<tr>
<td>sed -n ‘/s1/p’ hello.txt</td>
<td>查看只包含关键词”s1”的⾏</td>
</tr>
<tr>
<td>sed -e ‘s/ *$//‘ hello.txt</td>
<td>删除每⼀⾏最后的空⽩字符</td>
</tr>
<tr>
<td>sed -e ‘s/s1//g’ hello.txt</td>
<td>从⽂档中只删除词汇s1并保留剩余全部</td>
</tr>
<tr>
<td>sed -n ‘1,5p;5q’ hello.txt</td>
<td>查看从第⼀⾏到第5⾏内容</td>
</tr>
<tr>
<td>sed -n ‘5p;5q’ hello.txt</td>
<td>查看第5⾏</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>排序：sort</strong></td>
<td></td>
</tr>
<tr>
<td>sort file1 file2</td>
<td>排序两个⽂件的内容</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>比较文件内容：comm</strong></td>
<td></td>
</tr>
<tr>
<td>comm -1 file1 file2</td>
<td>⽐较两个⽂件的内容(去除’file1’所含内容)</td>
</tr>
<tr>
<td>comm -2 file1 file2</td>
<td>⽐较两个⽂件的内容(去除’file2’所含内容</td>
</tr>
<tr>
<td>comm -3 file1 file2</td>
<td>⽐较两个⽂件的内容(去除两⽂件共有部分)</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>常用命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><strong>切换目录：cd</strong></td>
<td></td>
</tr>
<tr>
<td>cd &lt;⽬录名&gt;</td>
<td>进⼊某个⽬录</td>
</tr>
<tr>
<td>cd ..</td>
<td>回上级⽬录</td>
</tr>
<tr>
<td>cd ../..</td>
<td>回上两级⽬录</td>
</tr>
<tr>
<td>cd</td>
<td>进个⼈主⽬录</td>
</tr>
<tr>
<td>cd -</td>
<td>回上⼀步所在⽬录</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>查看目录列表：ls</strong></td>
<td></td>
</tr>
<tr>
<td>ls</td>
<td>查看⽂件⽬录列表</td>
</tr>
<tr>
<td>ls -F</td>
<td>查看⽬录中内容（显示是⽂件还是⽬录）</td>
</tr>
<tr>
<td>ls -l</td>
<td>查看⽂件和⽬录的详情列表</td>
</tr>
<tr>
<td>ls -a</td>
<td>查看隐藏⽂件</td>
</tr>
<tr>
<td>ls -lh</td>
<td>查看⽂件和⽬录的详情列表（增强⽂件⼤⼩易读性）</td>
</tr>
<tr>
<td>ls -lSr</td>
<td>查看⽂件和⽬录列表（以⽂件⼤⼩升序查看）</td>
</tr>
<tr>
<td>pwd</td>
<td>显示当前路径</td>
</tr>
<tr>
<td>tree</td>
<td>查看⽂件和⽬录的树形结构</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>创建文件：touch</strong></td>
<td></td>
</tr>
<tr>
<td>touch filename</td>
<td>创建文件</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>创建目录：mkdir</strong></td>
<td></td>
</tr>
<tr>
<td>mkdir &lt;⽬录名&gt;</td>
<td>创建⽬录</td>
</tr>
<tr>
<td>mkdir dir1 dir2</td>
<td>同时创建两个⽬录</td>
</tr>
<tr>
<td>mkdir -p /tmp/dir1/dir2</td>
<td>创建⽬录树</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>删除：rm</strong></td>
<td></td>
</tr>
<tr>
<td>rm -f file1</td>
<td>删除’file1’⽂件</td>
</tr>
<tr>
<td>rmdir dir1</td>
<td>删除’dir1’⽬录</td>
</tr>
<tr>
<td>rm -rf dir1</td>
<td>删除’dir1’⽬录和其内容</td>
</tr>
<tr>
<td>rm -rf dir1 dir2</td>
<td>同时删除两个⽬录及其内容</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>复制：cp</strong></td>
<td></td>
</tr>
<tr>
<td>cp file1 file2</td>
<td>复制⽂件</td>
</tr>
<tr>
<td>cp dir/* .</td>
<td>复制某⽬录下的所有⽂件⾄当前⽬录</td>
</tr>
<tr>
<td>cp -a dir1 dir2</td>
<td>复制⽬录</td>
</tr>
<tr>
<td>cp -a /tmp/dir1 .</td>
<td>复制⼀个⽬录⾄当前⽬录</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>移动、重命名：mv</strong></td>
<td></td>
</tr>
<tr>
<td>mv old_dir new_dir</td>
<td>重命名/移动⽬录</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>搜索：find</strong></td>
<td></td>
</tr>
<tr>
<td>find / -name file1</td>
<td>从跟⽬录开始搜索⽂件/⽬录</td>
</tr>
<tr>
<td>find / -user user1</td>
<td>搜索⽤户user1的⽂件/⽬录</td>
</tr>
<tr>
<td>find /dir -name *.bin</td>
<td>在⽬录/dir中搜带有.bin后缀的⽂件</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>定位文件：locate</strong></td>
<td></td>
</tr>
<tr>
<td>locate &lt;关键词&gt;</td>
<td>快速定位⽂件</td>
</tr>
<tr>
<td>locate *.mp4</td>
<td>寻找.mp4结尾的⽂件</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>查看可执行文件路径：whereis</strong></td>
<td></td>
</tr>
<tr>
<td>whereis &lt;关键词&gt;</td>
<td>显示某⼆进制⽂件/可执⾏⽂件的路径</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>which</strong></td>
<td></td>
</tr>
<tr>
<td>which &lt;关键词&gt;</td>
<td>查找系统⽬录下某的⼆进制⽂件</td>
</tr>
</tbody></table>
<h2 id="文件打包、压缩和解压"><a href="#文件打包、压缩和解压" class="headerlink" title="文件打包、压缩和解压"></a>文件打包、压缩和解压</h2><table>
<thead>
<tr>
<th>文件后缀名</th>
<th>说明</th>
<th>压缩</th>
<th>解压缩</th>
<th>查看内容</th>
</tr>
</thead>
<tbody><tr>
<td>*.zip</td>
<td>zip 程序打包压缩的文件</td>
<td>zip xxx.zip 文件列表</td>
<td>unzip xxx.zip</td>
<td>zip -sf  xxx.zip</td>
</tr>
<tr>
<td>*.rar</td>
<td>rar 程序压缩的文件</td>
<td>rar a xxx.rar 文件列表</td>
<td>rar x xxx.rar</td>
<td>rar v xxx.rar 1</td>
</tr>
<tr>
<td>*.7z</td>
<td>7zip 程序压缩的文件</td>
<td>7z a fileName.7z dirName</td>
<td>7z x fileName.7z</td>
<td></td>
</tr>
<tr>
<td>*.tar</td>
<td>tar 程序打包，未压缩的文件</td>
<td>tar -cvf fileName.tar dirName</td>
<td>tar -xvf fileName.tar</td>
<td>tar -tvf fileName.tar</td>
</tr>
<tr>
<td>*.gz</td>
<td>gzip 程序 (GNU zip) 压缩的文件</td>
<td>gzip fileName</td>
<td>gzip -d fileName.gz</td>
<td>gzip -l fileName.gz</td>
</tr>
<tr>
<td>*.bz2</td>
<td>tar 打包，gzip 程序压缩的文件</td>
<td>bzip2 -z FileName</td>
<td>bzip2 -d FileName.bz2</td>
<td></td>
</tr>
<tr>
<td>*.tar.gz</td>
<td>tar打包，gzip程序压缩的文件</td>
<td>tar -zcvf FileName.tar.gz dirName</td>
<td>tar -zxvf FileName.tar.gz</td>
<td>tar -tvf fileName.tar</td>
</tr>
<tr>
<td>*.tar.xz</td>
<td>tar打包，xz程序压缩的文件</td>
<td>tar -cvJf fileName.tar.xz dirName</td>
<td>tar -xvJf fileName.tar.xz</td>
<td></td>
</tr>
<tr>
<td>*.tar.bz2</td>
<td>tar打包，bzip2程序压缩的文件</td>
<td>tar -jcvf FileName.tar.bz2 dirName</td>
<td>tar -jxvf FileName.tar.bz2</td>
<td></td>
</tr>
<tr>
<td>*.Z</td>
<td>compress命令解压缩rar文件</td>
<td>compress fileName</td>
<td>uncompress fileName.Z</td>
<td></td>
</tr>
</tbody></table>
<h2 id="软链接和硬链接"><a href="#软链接和硬链接" class="headerlink" title="软链接和硬链接"></a>软链接和硬链接</h2><p>简单地说，软链接是存放另一个文件的路径，而硬链接是以文件副本的形式存在，但不占用实际空间<br>挂载这个概念就比较好理解了，实际上就是文件系统和硬盘分区之间的一种关系，如果他们关联上了，我们就认为挂载了，如果他们取消了这个关联，就是卸载了</p>
<p>软链接相当于windows的快捷方式，硬链接可以理解为一个指针。a有一个硬链接到b，那么修改a的话b也会变。</p>
<p>主要通过ln命令实现，如下：</p>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>ln -s file1 link1</td>
<td>创建指向⽂件/⽬录的<strong>软链接</strong></td>
</tr>
<tr>
<td>ln file1 lnk1</td>
<td>创建指向⽂件/⽬录的<strong>硬链接</strong></td>
</tr>
</tbody></table>
<h1 id="Linux中的vi与vim"><a href="#Linux中的vi与vim" class="headerlink" title="Linux中的vi与vim"></a>Linux中的vi与vim</h1><blockquote>
<p>系统管理员的重要工作就是得要修改与设置某些重要软件的配置文件，因此至少得要学会一 种以上的命令行的文书编辑器。 在所有的 Linux distributions 上头都会有的一套文书编辑器就 是 vi ，而且很多软件默认也是使用 vi 做为他们编辑的接口， 因此鸟哥建议您务必要学会使用 vi 这个正规的文书编辑器。此外，vim 是进阶版的 vi ， vim 不但可以用不同颜色显示文字内 容，还能够进行诸如 shell script, C program 等程序编辑功能， 你可以将 vim 视为一种程序编 辑器！鸟哥也是用 vim 编辑鸟站的网页文章呢！</p>
<p>—— 鸟哥的Linux私房菜</p>
</blockquote>
<p>基本上 vi/vim 共分为三种模式，分别是<strong>一般指令模式（Command mode）</strong>，<strong>编辑模式（Insert mode）</strong>和<strong>命令行命令模式（command-line mode）</strong>。 这三种模式的作用分别是：</p>
<p>​           </p>
<img data-src="https://gitee.com/monkey-HH/picBed/raw/master/picbed/img/202201091343702.png" alt="img" style="zoom:50%;" />        



<h2 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h2><p>以vi打开一个文件就直接进入一般指令模式了(这 是默认的模式，也简称为一般模式)。在这个模式中，你可以使用“上下左右”按键来移动光标，你可以使用“删除字符”或“删除整列”来处理文件内容，也可以使用“复制、贴上”来处理你的文件数据，以下是我常用的命令</p>
<table>
<thead>
<tr>
<th>移动光标</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>[Ctrl] + [f]</td>
<td><strong>往下翻页</strong>，相当于 [Page Down]按 键 （常用）</td>
</tr>
<tr>
<td>[Ctrl] + [b]</td>
<td><strong>往上翻页</strong>，相当于 [Page Up] 按键 （常用）</td>
</tr>
<tr>
<td>[Ctrl] + [d]</td>
<td><strong>往下翻半页</strong></td>
</tr>
<tr>
<td>[Ctrl] + [u]</td>
<td><strong>往上翻半页</strong></td>
</tr>
<tr>
<td>H</td>
<td>光标移动到这个<strong>屏幕的最上方</strong>那一列的第一个字符</td>
</tr>
<tr>
<td>M</td>
<td>光标移动到这个<strong>屏幕的中央</strong>那一列的第一个 字符</td>
</tr>
<tr>
<td>L</td>
<td>光标移动到这个<strong>屏幕的最下方</strong>那一列的第一个字符</td>
</tr>
<tr>
<td>gg</td>
<td>移动到这个<strong>文件的第一列</strong>，相当于 1G 啊！ （常用）</td>
</tr>
<tr>
<td>G</td>
<td>移动到这个<strong>文件的最后一列</strong>（常用）</td>
</tr>
<tr>
<td>nG</td>
<td>n 为数字。移动到这个<strong>文件的第 n 列</strong>。例如 20G 则会移动到这个文件的第 20 列（可配合 :set nu）</td>
</tr>
<tr>
<td>n<Enter></td>
<td>n 为数字。光标<strong>向下移动 n 列</strong>（常用）</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>搜索与替代</strong></td>
<td></td>
</tr>
<tr>
<td>/word</td>
<td>向<strong>光标之下寻找字串</strong>。例 如要在文件内搜寻 vbird 这个字串，就输入 /vbird 即可！ （常用）</td>
</tr>
<tr>
<td>?word</td>
<td>向<strong>光标之上寻找字串</strong>名称为 word 的字 串。</td>
</tr>
<tr>
<td>n</td>
<td>next，<strong>重复</strong>搜索动作</td>
</tr>
<tr>
<td>N</td>
<td><strong>反向重复</strong>动作</td>
</tr>
<tr>
<td>:n1,n2s/word1/word2/g</td>
<td><strong>第n1-n2行中文本替换</strong>，把word1替换为word2</td>
</tr>
<tr>
<td>:%s/word1/word2/g</td>
<td><strong>全文替换</strong>，word1替换为word2</td>
</tr>
<tr>
<td>:%s/word1/word2/gc</td>
<td><strong>全文替换</strong>，word1替换为word2。替换前显示提示 字符给使用者确认（常用）</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>复制粘贴、删除</strong></td>
<td></td>
</tr>
<tr>
<td>x, X</td>
<td>在一行字当中，<strong>x 为向后删除</strong>一个字符 (相当于 [del] 按键)， <strong>X 为向前删除</strong>一个字符(相当于 [backspace] 亦即是退格键) (常用)</td>
</tr>
<tr>
<td>nx</td>
<td>n 为数字，<strong>连续向后删除 n 个</strong>字符。</td>
</tr>
<tr>
<td>dd</td>
<td><strong>整行删除</strong></td>
</tr>
<tr>
<td>ndd</td>
<td><strong>n行删除</strong></td>
</tr>
<tr>
<td>dw</td>
<td><strong>删除一个单词</strong></td>
</tr>
<tr>
<td>d1G</td>
<td><strong>删除光标所在行</strong></td>
</tr>
<tr>
<td>dG</td>
<td>删除光标所在到最后一行的所有数据</td>
</tr>
<tr>
<td>d$</td>
<td>删除游标所在处，到该行的最后一个字符</td>
</tr>
<tr>
<td>d0</td>
<td>那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符</td>
</tr>
<tr>
<td>yy</td>
<td>复制游标所在的那一行(常用)</td>
</tr>
<tr>
<td>nyy</td>
<td>n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)</td>
</tr>
<tr>
<td>y1G</td>
<td>复制游标所在行到第一行的所有数据</td>
</tr>
<tr>
<td>yG</td>
<td>复制游标所在行到最后一行的所有数据</td>
</tr>
<tr>
<td>y0</td>
<td>复制光标所在的那个字符到该行行首的所有数据</td>
</tr>
<tr>
<td>y$</td>
<td>复制光标所在的那个字符到该行行尾的所有数据</td>
</tr>
<tr>
<td>p, P</td>
<td>p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！ 举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后， 那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？ 那么原本的第 20 行会被推到变成 30 行。 (常用)</td>
</tr>
<tr>
<td>J</td>
<td><strong>合并两行内容</strong>，将光标所在行与下一行的数据结合成同一行</td>
</tr>
<tr>
<td>c</td>
<td>重复删除多个数据，例如向下删除 10 行，[ 10cj ]</td>
</tr>
<tr>
<td>u</td>
<td><strong>撤销动作</strong>(常用)，相当于CTRL+Z</td>
</tr>
<tr>
<td>[Ctrl]+r</td>
<td><strong>重做动作</strong>(常用)，相当于CTRL+Y</td>
</tr>
</tbody></table>
<h2 id="编辑模式"><a href="#编辑模式" class="headerlink" title="编辑模式"></a>编辑模式</h2><p>按下i、a、o、r就可以进入编辑模式，注意该模式下不要用小键盘输入数字。</p>
<p>上面这些按键中，在 vi 画面的左下角处会出现『–INSERT–』或『–REPLACE–』的字样。 由名称就知道该动作了吧！！特别注意的是，我们上面也提过了，你想要在档案里面输入字符时， 一定要在左下角处看到 INSERT 或 REPLACE 才能输入喔！</p>
<table>
<thead>
<tr>
<th align="left">进入输入或取代的编辑模式</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td align="left">i, I</td>
<td>进入输入模式(Insert mode)： i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。 (常用)</td>
</tr>
<tr>
<td align="left">a, A</td>
<td>进入输入模式(Insert mode)： a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。(常用)</td>
</tr>
<tr>
<td align="left">o, O</td>
<td>进入输入模式(Insert mode)： 这是英文字母 o 的大小写。o 为在目前光标所在的下一行处输入新的一行； O 为在目前光标所在的上一行处输入新的一行！(常用)</td>
</tr>
<tr>
<td align="left">r, R</td>
<td>进入取代模式(Replace mode)： r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下 ESC 为止；(常用)</td>
</tr>
</tbody></table>
<p>进入了编辑模式后，按ESC可以会到命令模式。</p>
<h2 id="命令行命令模式"><a href="#命令行命令模式" class="headerlink" title="命令行命令模式"></a>命令行命令模式</h2><table>
<thead>
<tr>
<th align="left">指令行的储存、离开等指令</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td align="left">:w</td>
<td><strong>保存数据</strong></td>
</tr>
<tr>
<td align="left">:w!</td>
<td><strong>强制保存</strong>只读文件的数据</td>
</tr>
<tr>
<td align="left">:q</td>
<td><strong>退出</strong></td>
</tr>
<tr>
<td align="left">:q!</td>
<td><strong>不保存修改，强制退出</strong></td>
</tr>
<tr>
<td align="left">:wq</td>
<td><strong>保存修改，并退出</strong></td>
</tr>
<tr>
<td align="left">:w [filename]</td>
<td><strong>文件另存为</strong></td>
</tr>
<tr>
<td align="left">:r [filename]</td>
<td>在编辑的数据中，读入另一个档案的数据。亦即将 『filename』 这个档案内容加到游标所在行后面</td>
</tr>
<tr>
<td align="left">:n1,n2 w [filename]</td>
<td>将 n1 到 n2 的内容储存成 filename 这个档案。</td>
</tr>
<tr>
<td align="left">:! command</td>
<td>暂时离开 vi 到指令行模式下执行 command 的显示结果！例如 『:! ls /home』即可在 vi 当中察看 /home 底下以 ls 输出的档案信息！</td>
</tr>
<tr>
<td align="left"><strong>设置行号</strong></td>
<td></td>
</tr>
<tr>
<td align="left">:set nu</td>
<td>显示行号，设定之后，会在每一行的前缀显示该行的行号</td>
</tr>
<tr>
<td align="left">:set nonu</td>
<td>与 set nu 相反，为取消行号！</td>
</tr>
</tbody></table>
<h1 id="Linux软件安装与管理"><a href="#Linux软件安装与管理" class="headerlink" title="Linux软件安装与管理"></a>Linux软件安装与管理</h1><p>既然用到了linux，第一件事情当然就是安装软件啦，没有软件那就啥都干不了啦，下面将分为两种方式介绍软件安装的方式，第一种方式就是Tarball 来安装与升级管理我们的软件喔，第二种方式就是软件包管理器（yum、rpm等）</p>
<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p><code>源代码</code>：就是程序码，写给人类看的程序语言，但机器并不认识，所以无法执行； </p>
<p><code>编译器</code>：将程序码转译成为机器看的懂得语言，就类似翻译者的角色； </p>
<p><code>二进制码</code>：经过编译器变成二进制程序后，此时的代码称为<code>二进制代码</code>，机器看的懂所以可以执行的文件。</p>
<p><code>函数库</code>：就类似副程序的角色，可以被调用来执行的一段功能函数。</p>
<img data-src="https://gitee.com/monkey-HH/picBed/raw/master/picbed/img/image-20210826211248784.png" alt="image-20210826211248784" style="zoom:80%;" />



<blockquote>
<p>Tips 想一想，一个核心的源代码文件大约要 300~500 MB 以上，如果每个人都去下载这样的 一个核心文件， 呵呵！那么网络带宽不被吃的死翘翘才怪呢！</p>
</blockquote>
<p>通俗的解释什么是二进制包和源码包：source code 是程序員寫的碼， binary code 是機器跑的碼。 source code 得經過 compile 才能成為 binary code 。 </p>
<h2 id="tar包形式安装"><a href="#tar包形式安装" class="headerlink" title="tar包形式安装"></a>tar包形式安装</h2><p>一般下载软件，从官网上下载来的都是后缀为tar.gz或者tar.xz等的软件包，而这些软件包就是Tatball包。</p>
<p>所谓的 Tarball 文件，其实就是将软件的所有源代码文件先以 <code>tar</code> 打包（tar只是打包，没有压缩），然后再以压缩技术来压缩，通常最常见的就是以 gzip 来压缩了。因为利用了 tar 与 gzip 的功能，所以 tarball 文件 一般的扩展名就会写成 .tar.gz 或者是简写为 .tgz 啰！不过，近来由于 bzip2 与 xz 的压缩率 较佳，所以 Tarball 渐渐的以 bzip2 及 xz 的压缩技术来取代 gzip 啰！因此文件名也会变成 .tar.bz2, .tar.xz 之类的哩。</p>
<p>所以说， Tarball 是一个软件包， 你将他解压缩之后，里面的文件 通常就会有： </p>
<ul>
<li>原始程序码文件； </li>
<li>侦测程序文件 （可能是 configure 或 config 等文件名）； </li>
<li>本软件的简易说明与安装说明 （INSTALL 或 README）。</li>
</ul>
<h3 id="tar-gz等形式的源代码包"><a href="#tar-gz等形式的源代码包" class="headerlink" title="*.tar.gz等形式的源代码包"></a>*.tar.gz等形式的源代码包</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. 下载：通过wget直接下载软件包 或者 官网下载后使用ssh客户端将其传到服务器，一般放于/usr/<span class="built_in">local</span>/src </span><br><span class="line">2. 解压：通过 tar -zxvf [filename.tar.gz] 等命令解压软件包，确保文件都在/usr/<span class="built_in">local</span>/src/&#123;filename&#125;中</span><br><span class="line">3. 环境准备：根据 INSTALL/README 的内容察看并安装好一些相依的软件 （非必要）；</span><br><span class="line">4. 配置: 进入目录后，通过./configure --prefix=/usr/<span class="built_in">local</span>/&#123;filename&#125;，会根据环境创建一个MakeFile文件</span><br><span class="line">5. 编译：make，原始文件被编译成可执行文件</span><br><span class="line">6. 安装：make install，确保安装后的文件在/usr/<span class="built_in">local</span>/&#123;filename&#125;</span><br><span class="line">7. ...</span><br><span class="line">8. 卸载：rm -rf /usr/<span class="built_in">local</span>/&#123;filename&#125; 或者 make uninstall（记得先进入目录）</span><br></pre></td></tr></table></figure>



<img data-src="https://gitee.com/monkey-HH/picBed/raw/master/picbed/img/image-20210826211627006.png" alt="image-20210826211627006" style="zoom:67%;" />

<p>说明：</p>
<ul>
<li>上面的步骤是一步一步来进行的，而其中只要一个步骤无法成功，那么后续的步骤 就完全没有办法进行的！ </li>
<li>建议解压后先阅读说明文件，可以了解安装有哪些需求，有必要时还需改动编译配置。</li>
<li>有些软件包的源代码在编译安装后可以用make uninstall命令来进行卸载，如果不提供此功能，则软件的卸载必须手动删除。由于软件可能将文件分散地安装在系统的多个目录中，往往很难把它删除干净，那你应该在编译前进行配置，指定软件将要安装到目标路径：./configure –prefix=目录名，这样可以使用“rm -rf 软件目录名”命令来进行干净彻底的卸载。与其它安装方式相比，需要用户自己编译安装是最难的。</li>
</ul>
<blockquote>
<p>这时候就有好奇宝宝要问了，那么通过tar源代码包安装（无配置–prefix==/usr/local/{filename}的情况下）好了的程序都到了哪里呢？</p>
</blockquote>
<p>如果在 ./configure 那一步，没有设置 –prefix==/usr/local/filename   则默认情况下，软件的内容大致上是散放在以下目录</p>
<ul>
<li><p>/usr/local/etc ：配置文件</p>
</li>
<li><p>/usr/local/bin ：可执行文件</p>
</li>
<li><p>/usr/local/lib ：函数库</p>
</li>
<li><p>/usr/local/man：线上说明文档</p>
</li>
</ul>
<blockquote>
<p>这时候就有个问题了，那我要卸载一个软件的时候，岂不是要一个个文件夹里去删除对应文件？</p>
</blockquote>
<p>答案是显然的：是的！因此合理选择安装位置，一定要配置好prefix，对于后续的软件维护和管理有重要的好处。</p>
<p>（挖个坑，源码包解压后，软件安装成功，应该就可以删除位于/usr/local/src下的源码包了）</p>
<h3 id="tar-gz等形式的二进制包"><a href="#tar-gz等形式的二进制包" class="headerlink" title="*.tar.gz等形式的二进制包"></a>*.tar.gz等形式的二进制包</h3><p><strong>二进制包只需要下载和解包以后，就马上可以使用。</strong></p>
<p>说明：*.tar.gz/*.bz2形式的二进制软件包是用tar工具来打包、用gzip/bzip2压缩的，安装时直接解包即可。对于解压后只有单一目录的软件，卸载时用<span class="exturl" data-url="aHR0cHM6Ly93d3cubGludXhjb29sLmNvbS8=">命令</span>“rm -rf 软件目录名”；如果解压后文件分散在目录中，则必须一一手动删除，想知道解压时向系统中安装了哪些文件，可以用<span class="exturl" data-url="aHR0cHM6Ly93d3cubGludXhjb29sLmNvbS8=">命令</span>“tar -ztvf *.tar.gz”/“tar -jtvf *.bz2”获取清单。tar的参数z是调用gzip解压，x是解包，v是校验，f是显示结果，j是调用bzip2解压，t是列出包的文件清单。</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">下载：通过wget直接下载软件包 或者 官网下载后使用ssh客户端将其传到服务器，一般放于/usr/local</span><br><span class="line">解压&amp;安装：tar -zxvf *.tar.gz 或 tar -jxvf *.bz2，要确保解压后所有文件都在/usr/local/&#123;filename&#125;</span><br><span class="line">卸载：手动删除 </span><br></pre></td></tr></table></figure>

<h4 id="设置Path变量"><a href="#设置Path变量" class="headerlink" title="设置Path变量"></a>设置Path变量</h4><p>如果/usr/local/{filename}/bin下的可执行文件就是无法直接在任何地方直接执行了，那就要像window一样去将该目录加入到系统的PATH变量当中去，如下图显示的一般，在去该path变量</p>
<p>PATH变量在/etc/profile文件设置</p>
<p><img data-src="https://gitee.com/monkey-HH/picBed/raw/master/picbed/img/image-20210826225928354.png" alt="image-20210826225928354"></p>
<p>装完之后要让配置文件生效，可以输入如下命令或者是重启系统</p>
<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>



<h3 id="如何分辨是二进制包还是源代码包"><a href="#如何分辨是二进制包还是源代码包" class="headerlink" title="如何分辨是二进制包还是源代码包"></a>如何分辨是二进制包还是源代码包</h3><p>以nodejs为例子，上官网，binnaries的就是二进制包，source code的就是源码包。</p>
<blockquote>
<p>什么情况下推荐用二进制包安装呢？</p>
</blockquote>
<p>当该软件需要特定的版本的编译器才能编译源码包，而自己又不想下载或者很难下载，比如我装个nodejs，系统里的gcc-c++是4.x版本的，编译源码包的过程需要6.x才能装，但是自己死活装不上去高版本的c++，此时就可以考虑二进制包了，一步到位。</p>
<img data-src="https://gitee.com/monkey-HH/picBed/raw/master/picbed/img/image-20210826230518963.png" alt="image-20210826230518963" style="zoom: 67%;" />

<p>rpm格式中的二进制包和源码包很好区分：二进制格式的包名字很长，都带有版本号、适应平台、适应的硬件类型等，而源码格式仅仅就是一个版本号的tar包。<br>mysql-5.0.45.tar.gz 是 源码包  像这样的 mysql-5.0.45-linux-x86_64-glibc23.tar.gz  是二进制包</p>
<h3 id="安装路径注意事项⭐"><a href="#安装路径注意事项⭐" class="headerlink" title="安装路径注意事项⭐"></a>安装路径注意事项⭐</h3><p>Linux 的软件安装目录是也是有讲究的，理解这一点，在对系统管理是有益的</p>
<p>我们先看看几个常见目录的介绍：</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>/usr</td>
<td>系统级的目录，可以理解为C:/Windows/，/usr/lib理解为C:/Windows/System32。</td>
</tr>
<tr>
<td>/usr/src</td>
<td>系统级的源码目录。</td>
</tr>
<tr>
<td>/usr/local</td>
<td>用户级的程序目录，可以理解为C:/Progrem Files/。用户自己编译的软件默认会安装到这个目录下。</td>
</tr>
<tr>
<td>/usr/local/src</td>
<td>用户级的源码目录。</td>
</tr>
<tr>
<td>/opt</td>
<td>用户级的程序目录，可以理解为D:/Software，opt有可选的意思，这里可以用于放置第三方大型软件（或游戏），当你不需要时，直接rm -rf掉即可。在硬盘容量不够时，也可将/opt单独挂载到其他磁盘上使用。</td>
</tr>
</tbody></table>
<p>那么安装tar包的最佳实践是什么呢？</p>
<ul>
<li>源码包：<ul>
<li>确保解压后的文件在 /usr/local/src/{filename} </li>
<li>确保最终安装好的程序文件都在  /usr/local/{filename} ，即在./configure那一步，配置–prefix==/usr/local/{filename}</li>
</ul>
</li>
<li>二进制包：<ul>
<li>解压的时候，就得确保最终安装好的程序文件都在  /usr/local/{filename}</li>
</ul>
</li>
</ul>
<h2 id="软件包管理器形式安装"><a href="#软件包管理器形式安装" class="headerlink" title="软件包管理器形式安装"></a>软件包管理器形式安装</h2><p>说完最原始的安装方式之后，有人就要问了，上面的方法，又要下载，又要编译，又要安装。这过程是真的很麻烦的，而且对于不熟整个系统的朋友来说，还真是累人啊！</p>
<p>那么有没有一种方法，有没有一个“腾讯软件管家”，直接帮我们“一键式傻瓜安装、升级、卸载”呢？有！</p>
<p>不同版本的linux使用的软件包管理器机制可能不同：</p>
<ul>
<li>dpkg：最早是由 Debian Linux 社群所开发出来的，通过 dpkg 的机制， Debian 提供的软件就能够简单的安装起来，同时还能提供安装后的软件信息，实在非常 不错。 只要是衍生于 Debian 的其他 Linux distributions 大多使用 dpkg 这个机制来管理 软件的， 包括 B2D, Ubuntu 等等。</li>
<li>RPM： “ RedHat Package Manager，这个机制最早是由 Red Hat 这家公司开发出来的，后来实在很好用，因此很多 distributions 就使用这个机制来作为软件安装的管理方式。包括 Fedora, CentOS, SuSE 等等知名的开发商都是用这咚咚。</li>
</ul>
<p><img data-src="https://gitee.com/monkey-HH/picBed/raw/master/picbed/img/image-20210826231424494.png" alt="image-20210826231424494"></p>
<p>注：RPM和YUM方式装的包的后缀都是.rpm，类似于android的.apk。RPM包并不是跨平台的。RedHat的RPM包与SUSE的RPM包不能混用。</p>
<h3 id="Centos等平台"><a href="#Centos等平台" class="headerlink" title="Centos等平台"></a>Centos等平台</h3><h4 id="RPM（RPM-Package-Manager）"><a href="#RPM（RPM-Package-Manager）" class="headerlink" title="RPM（RPM Package Manager）"></a>RPM（RPM Package Manager）</h4><blockquote>
<p>最早称为Red Hat Package Manager，这一文件格式名称虽然打上了RedHat的标志，但是其原始设计理念是开放式的，包括OpenLinux、S.u.S.E.以及Turbo Linux等<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9MaW51eC8yNzA1MA==">Linux</span>的分发版本都有采用，可以算是公认的行业标准了，于是就改名了为RPM Package Manager。</p>
</blockquote>
<p>RPM最大的缺点就是无法处理依赖关系，所以一般用YUM。</p>
<h5 id="Linux-RPM包统一命名规则"><a href="#Linux-RPM包统一命名规则" class="headerlink" title="Linux RPM包统一命名规则"></a>Linux RPM包统一命名规则</h5><p>RPM 二进制包的命名需遵守统一的命名规则，用户通过名称就可以直接获取这类包的版本、适用平台等信息。</p>
<p>RPM 二进制包命名的一般格式如下：</p>
<p>包名-版本号-发布次数-发行商-Linux平台-适合的硬件平台-包扩展名</p>
<p>例如，RPM 包的名称是<code>httpd-2.2.15-15.el6.centos.1.i686.rpm</code>，其中：</p>
<ul>
<li><p>httped：软件包名。这里需要注意，httped 是包名，而 httpd-2.2.15-15.el6.centos.1.i686.rpm 通常称为包全名，包名和包全名是不同的，在某些 Linux 命令中，有些命令（如包的安装和升级）使用的是包全名，而有些命令（包的查询和卸载）使用的是包名，一不小心就会弄错。</p>
</li>
<li><p>2.2.15：包的版本号，版本号的格式通常为<code>主版本号.次版本号.修正号</code>。</p>
</li>
<li><p>15：二进制包发布的次数，表示此 RPM 包是第几次编程生成的。</p>
</li>
<li><p>el*：软件发行商，el6 表示此包是由 Red Hat 公司发布，适合在 RHEL 6.x (Red Hat Enterprise Unux) 和 CentOS 6.x 上使用。</p>
</li>
<li><p>centos：表示此包适用于 CentOS 系统。</p>
</li>
<li><p>i686：表示此包使用的硬件平台，目前的 RPM 包支持的平台如表 1 所示：</p>
<table>
<thead>
<tr>
<th>平台名称</th>
<th>适用平台信息</th>
</tr>
</thead>
<tbody><tr>
<td>i386</td>
<td>386 以上的计算机都可以安装</td>
</tr>
<tr>
<td>i586</td>
<td>686 以上的计算机都可以安装</td>
</tr>
<tr>
<td>i686</td>
<td>奔腾 II 以上的计算机都可以安装，目前所有的 CPU 是奔腾 II 以上的，所以这个软件版本居多</td>
</tr>
<tr>
<td>x86_64</td>
<td>64 位 CPU 可以安装</td>
</tr>
<tr>
<td>noarch</td>
<td>没有硬件限制</td>
</tr>
</tbody></table>
</li>
<li><p>rpm：RPM 包的扩展名，表明这是编译好的二进制包，可以使用 rpm 命令直接安装。此外，还有以 src.rpm 作为扩展名的 RPM 包，这表明是源代码包，需要安装生成源码，然后对其编译并生成 rpm 格式的包，最后才能使用 rpm 命令进行安装。</p>
</li>
</ul>
<h5 id="Linux-RPM包分类"><a href="#Linux-RPM包分类" class="headerlink" title="Linux  RPM包分类"></a>Linux  RPM包分类</h5><p>RPM有两种文件格式，<strong>RPM、SRPM</strong>，区别如下：</p>
<table>
<thead>
<tr>
<th>文件格式</th>
<th>文件名格式</th>
<th>直接安装与否</th>
<th>内含程序类型</th>
<th>可否修改参数并编译</th>
</tr>
</thead>
<tbody><tr>
<td>RPM</td>
<td>xxx.rpm</td>
<td>可</td>
<td>已编译</td>
<td>不可</td>
</tr>
<tr>
<td>SRPM</td>
<td>xxx.src.rpm</td>
<td>不可</td>
<td>未编译的源代码</td>
<td>可</td>
</tr>
</tbody></table>
<p>从表中可以看到，SRPM 包的命名与 RPM 包基本类似，唯一区别在于 SRPM 包多了“src”标志，即 SRPM 包采用“包名-版本号-发布次数-发行商-src.rpm”的方式进行命名，比如“MySQL-5.5.29-2.el6.src.rpm”。</p>
<p>此外，SRPM 包是未经编译的源码包，无法直接用来安装软件，需要经过以下 2 步：</p>
<ol>
<li>将 SRPM 包编译成二进制的 RPM 包；</li>
<li>使用编译完成的 RPM 包安装软件；</li>
</ol>
<h5 id="RPM包默认安装路径"><a href="#RPM包默认安装路径" class="headerlink" title="RPM包默认安装路径"></a>RPM包默认安装路径</h5><table>
<thead>
<tr>
<th>安装路径</th>
<th>含 义</th>
</tr>
</thead>
<tbody><tr>
<td>/etc/</td>
<td>配置文件安装目录</td>
</tr>
<tr>
<td>/usr/bin/</td>
<td>可执行的命令安装目录</td>
</tr>
<tr>
<td>/usr/lib/</td>
<td>程序所使用的函数库保存位置</td>
</tr>
<tr>
<td>/usr/share/doc/</td>
<td>基本的软件使用手册保存位置</td>
</tr>
<tr>
<td>/usr/share/man/</td>
<td>帮助文件保存位置</td>
</tr>
</tbody></table>
<h5 id="rpm包安装、卸载、升级"><a href="#rpm包安装、卸载、升级" class="headerlink" title="rpm包安装、卸载、升级"></a>rpm包安装、卸载、升级</h5><p>安装前，我们可以检测系统是否自带安装软件，例如 MySQL:</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep mysql</span><br></pre></td></tr></table></figure>

<p>如果你系统有安装，那可以选择进行卸载:</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -e mysql　　// 普通删除模式</span><br><span class="line">rpm -e --nodeps mysql　　// 强力删除模式，如果使用上面命令删除时，提示有依赖的其它文件，则用该命令可以对其进行强力删除</span><br></pre></td></tr></table></figure>



<h6 id="rpm形式的二进制软件包"><a href="#rpm形式的二进制软件包" class="headerlink" title="*.rpm形式的二进制软件包"></a>*.rpm形式的二进制软件包</h6><p>说明：RPM（RedHat Packge Manager）是RedHat公司出的软件包管理器，使用它可以很容易地对rpm形式的软件包进行安装、升级、卸载、验证、查询等操作，安装简单，而卸载时也可以将软件安装在多处目录中的文件删除干净。*.rpm是软件包的文件名（这里的*.rpm特指*.src.rpm以外的以rpm为后缀的文件）；</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rpm常用参数：</span><br><span class="line">－ivh：安装显示安装进度 [install--verbose—hash]</span><br><span class="line">－Uvh：升级软件包 [Update]；</span><br><span class="line">－qpl：列出RPM软件包内的文件信息[Query Package list]；</span><br><span class="line">－qpi：列出RPM软件包的描述信息[Query Package install package(s)]；</span><br><span class="line">－qf：查找指定文件属于哪个RPM软件包[Query File]；</span><br><span class="line">－Va：校验所有的RPM软件包，查找丢失的文件[View Lost]；</span><br><span class="line">－e：删除包</span><br></pre></td></tr></table></figure>

<p>安装也很简单：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh a.rpm</span><br></pre></td></tr></table></figure>



<h6 id="src-rpm形式的源代码软件包"><a href="#src-rpm形式的源代码软件包" class="headerlink" title="***.src.rpm形式的源代码软件包**"></a>***.src.rpm形式的源代码软件包**</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">安装：rpm -rebuild *.src.rpm </span><br><span class="line">      cd /usr/src/dist/RPMS </span><br><span class="line">      rpm -ivh *.rpm </span><br><span class="line">卸载：rpm -e packgename </span><br></pre></td></tr></table></figure>

<p>说明：rpm –rebuild *.src.rpm命令将源代码编译并在/usr/src/dist/RPMS下生成二进制的rpm包，然后再安装该二进制包即可。packgename如前所述，两种方法如下：</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">法1：</span><br><span class="line">rpm -i your-package.src.rpm</span><br><span class="line">cd /usr/src/redhat/SPECS</span><br><span class="line">rpmbuild -bp your-package.specs           #一个和你的软件包同名的specs文件</span><br><span class="line">cd /usr/src/redhat/BUILD/your-package/    #一个和你的软件包同名的目录</span><br><span class="line">./configure                    #这一步和编译普通的源码软件一样，可以加上参数</span><br><span class="line">make</span><br><span class="line">make instal</span><br><span class="line">法2：</span><br><span class="line">rpm -i you-package.src.rpm cd /usr/src/redhat/SPECS  #前两步和方法一相同</span><br><span class="line">rpmbuild -bb your-package.specs   #一个和你的软件包同名的specs文件 </span><br><span class="line">这时在/usr/src/redhat/RPM/i386/（根据具体包的不同，也可能是i686,noarch等等）在这个目录下，有一个新的rpm包，这个是编译好的二进制文件。</span><br><span class="line">rpm -i new-package.rpm即可安装完成。</span><br></pre></td></tr></table></figure>





<h5 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h5><table>
<thead>
<tr>
<th>作用</th>
<th>常用命令</th>
</tr>
</thead>
<tbody><tr>
<td>查看已安装的rpm包</td>
<td>rpm -qa</td>
</tr>
<tr>
<td>查询某个rpm包</td>
<td>rpm -q pkg_name</td>
</tr>
<tr>
<td>显示xxx功能是由哪个包提供的</td>
<td>rpm -q –whatprovides xxx</td>
</tr>
<tr>
<td>显示xxx功能被哪个程序包依赖的</td>
<td>rpm -q –whatrequires xxx</td>
</tr>
<tr>
<td>显示xxx包的更改记录</td>
<td>rpm -q –changelog xxx</td>
</tr>
<tr>
<td>查看⼀个包的详细信息</td>
<td>rpm -qi pkg_name</td>
</tr>
<tr>
<td>查询⼀个包所提供的⽂档</td>
<td>rpm -qd pkg_name</td>
</tr>
<tr>
<td>查看已安装rpm包提供的配置⽂件</td>
<td>rpm -qc pkg_name</td>
</tr>
<tr>
<td>查看⼀个包安装了哪些⽂件</td>
<td>rpm -ql pkg_name</td>
</tr>
<tr>
<td>查看某个⽂件属于哪个包</td>
<td>rpm -qf filename</td>
</tr>
<tr>
<td>查询包的依赖关系</td>
<td>rpm -qR pkg_name</td>
</tr>
<tr>
<td>安装rpm包</td>
<td>rpm -ivh xxx.rpm</td>
</tr>
<tr>
<td>测试安装rpm包</td>
<td>rpm -ivh –test xxx.rpm</td>
</tr>
<tr>
<td>安装rpm包时忽略依赖关系</td>
<td>rpm -ivh –nodeps xxx.rpm</td>
</tr>
<tr>
<td>卸载程序包</td>
<td>rpm -e xxx</td>
</tr>
<tr>
<td>升级确定已安装的rpm包</td>
<td>rpm -Fvh pkg_name</td>
</tr>
<tr>
<td>升级rpm包(若未安装则会安装)</td>
<td>rpm -Uvh pkg_name</td>
</tr>
<tr>
<td>RPM包详细信息校验</td>
<td>rpm -V pkg_name</td>
</tr>
</tbody></table>
<h4 id="YUM（Yellow-dog-Updater）"><a href="#YUM（Yellow-dog-Updater）" class="headerlink" title="YUM（Yellow dog Updater）"></a>YUM（Yellow dog Updater）</h4><p>YUM是一个RPM软件包的前端工具，在后端依旧使用RPM软件包管理器来管理软件包，可以说是对RPM的“封装”。</p>
<p>相较于RPM，其优势如下：</p>
<ul>
<li>自动处理依赖关系：yum可以自动寻找需要的依赖并且进行下载。</li>
<li>可以在线下载： rpm 只能安装已经下载到本地机器上的rpm 包，yum能在线下载并安装rpm包，能更新。</li>
</ul>
<h5 id="YUM语法"><a href="#YUM语法" class="headerlink" title="YUM语法"></a>YUM语法</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum [options] [command] [package ...]</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>options：</strong>可选，选项包括-h（帮助），-y（当安装过程提示选择全部为 “yes”），-q（不显示安装的过程）等等。</li>
<li><strong>command：</strong>要进行的操作。</li>
<li><strong>package：</strong>安装的包名。</li>
</ul>
<h5 id="yum常用命令"><a href="#yum常用命令" class="headerlink" title="yum常用命令"></a>yum常用命令</h5><ul>
<li><p>列出所有可更新的软件清单命令：<strong>yum check-update</strong></p>
</li>
<li><p>更新所有软件命令：<strong>yum update</strong></p>
</li>
<li><p>仅安装指定的软件命令：<strong>yum install <package_name></strong></p>
</li>
<li><p>仅更新指定的软件命令：<strong>yum update <package_name></strong></p>
</li>
<li><p>列出所有可安裝的软件清单命令：<strong>yum list</strong></p>
</li>
<li><p>删除软件包命令：<strong>yum remove <package_name></strong></p>
</li>
<li><p>查找软件包命令：<strong>yum search <keyword></strong></p>
</li>
<li><p>清除缓存命令:</p>
<ul>
<li><p><strong>yum clean packages</strong>: 清除缓存目录下的软件包</p>
</li>
<li><p><strong>yum clean headers</strong>: 清除缓存目录下的 headers</p>
</li>
<li><p><strong>yum clean oldheaders</strong>: 清除缓存目录下旧的 headers</p>
</li>
<li><p><strong>yum clean, yum clean all (= yum clean packages; yum clean oldheaders)</strong> :清除缓存目录下的软件包及旧的 headers</p>
</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>常用命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>yum repolist enabled</td>
<td>显示可⽤的源仓库</td>
</tr>
<tr>
<td>yum search pkg_name</td>
<td>搜索软件包</td>
</tr>
<tr>
<td>yum install pkg_name</td>
<td>下载并安装软件包</td>
</tr>
<tr>
<td>yum install –downloadonly pkg_name</td>
<td>只 下 载 不 安 装</td>
</tr>
<tr>
<td>yum list</td>
<td>显示所有程序包</td>
</tr>
<tr>
<td>yum list installed</td>
<td>查看当前系统已安装包</td>
</tr>
<tr>
<td>yum list updates</td>
<td>查看可以更新的包列表</td>
</tr>
<tr>
<td>yum check-update</td>
<td>查看可升级的软件包</td>
</tr>
<tr>
<td>yum update</td>
<td>更新所有软件包</td>
</tr>
<tr>
<td>yum update pkg_name</td>
<td>升级指定软件包</td>
</tr>
<tr>
<td>yum deplist pkg_name</td>
<td>列出软件包依赖关系</td>
</tr>
<tr>
<td>yum remove pkg_name</td>
<td>删除软件包</td>
</tr>
<tr>
<td>yum clean all</td>
<td>清除缓存</td>
</tr>
<tr>
<td>yum clean packages</td>
<td>清除缓存的软件包</td>
</tr>
<tr>
<td>yum clean headers</td>
<td>清除缓存的header</td>
</tr>
</tbody></table>
<h5 id="YUM包默认安装路径"><a href="#YUM包默认安装路径" class="headerlink" title="YUM包默认安装路径"></a>YUM包默认安装路径</h5><p>因为YUM事实上是用RPM包来安装的，所以默认的安装路径也是一样的。</p>
<table>
<thead>
<tr>
<th>Directory</th>
<th><strong>Contents of Directory</strong></th>
</tr>
</thead>
<tbody><tr>
<td>/etc</td>
<td>一些配置文件的目录，例如/etc/init.d/mysql</td>
</tr>
<tr>
<td>/usr/bin</td>
<td>一些可执行文件</td>
</tr>
<tr>
<td>/usr/lib</td>
<td>一些程序使用的动态函数库</td>
</tr>
<tr>
<td>/usr/share/doc</td>
<td>一些基本的软件使用手册与帮助文档</td>
</tr>
<tr>
<td>/usr/share/man</td>
<td>一些man page文件</td>
</tr>
</tbody></table>
<h3 id="Ubuntu等平台"><a href="#Ubuntu等平台" class="headerlink" title="Ubuntu等平台"></a>Ubuntu等平台</h3><h4 id="DPKG"><a href="#DPKG" class="headerlink" title="DPKG"></a>DPKG</h4><table>
<thead>
<tr>
<th>常用命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>dpkg -c xxx.deb</td>
<td>列出deb包的内容</td>
</tr>
<tr>
<td>dpkg -i xxx.deb</td>
<td>安装/更新deb包</td>
</tr>
<tr>
<td>dpkg -r pkg_name</td>
<td>移除deb包</td>
</tr>
<tr>
<td>dpkg -P pkg_name</td>
<td>移除deb包(不保留配置)</td>
</tr>
<tr>
<td>dpkg -l</td>
<td>查看系统中已安装deb包</td>
</tr>
<tr>
<td>dpkg -l pkg_name</td>
<td>显示包的⼤致信息</td>
</tr>
<tr>
<td>dpkg -L pkg_name</td>
<td>查看deb包安装的⽂件</td>
</tr>
<tr>
<td>dpkg -s pkg_name</td>
<td>查看包的详细信息</td>
</tr>
<tr>
<td>dpkg –unpack xxx.deb</td>
<td>解开deb包的内容</td>
</tr>
</tbody></table>
<h4 id="APT"><a href="#APT" class="headerlink" title="APT"></a>APT</h4><table>
<thead>
<tr>
<th>常用命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>apt-cache search pkg_name</td>
<td>搜索程序包</td>
</tr>
<tr>
<td>apt-cache show pkg_name</td>
<td>获取包的概览信息</td>
</tr>
<tr>
<td>apt-get install pkg_name</td>
<td>安装/升级软件包</td>
</tr>
<tr>
<td>apt-get purge pkg_name</td>
<td>卸载软件（包括配置）</td>
</tr>
<tr>
<td>apt-get remove pkg_name</td>
<td>卸载软件（不包括配置）</td>
</tr>
<tr>
<td>apt-get update</td>
<td>更新包索引信息</td>
</tr>
<tr>
<td>apt-get upgrade</td>
<td>更新已安装软件包</td>
</tr>
<tr>
<td>apt-get clean</td>
<td>清理缓存</td>
</tr>
</tbody></table>
<h2 id="不同安装方式的区别"><a href="#不同安装方式的区别" class="headerlink" title="不同安装方式的区别"></a>不同安装方式的区别</h2><ul>
<li><p>RPM包安装的服务可以使用系统服务管理命令（service）来管理，例如RPM包安装的apache的启动方法是： </p>
</li>
<li><ul>
<li>/etc/rc.d/init.d/httpd start </li>
<li>service httpd start</li>
</ul>
</li>
<li><p>而源码包安装的服务则不能被服务管理命令管理，因为没有安装到默认路径中。所以只能用绝对路径进行服务的管理，如： /usr/local/apache2/bin/apachectl start</p>
</li>
</ul>
<h1 id="Linux用户和群组管理"><a href="#Linux用户和群组管理" class="headerlink" title="Linux用户和群组管理"></a>Linux用户和群组管理</h1><p>Linux系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。</p>
<p>用户的账号一方面可以帮助系统管理员对使用系统的用户进行跟踪，并控制他们对系统资源的访问；另一方面也可以帮助用户组织文件，并为用户提供安全性保护。</p>
<p>每个用户账号都拥有一个唯一的用户名和各自的口令。</p>
<p>用户在登录时键入正确的用户名和口令后，就能够进入系统和自己的主目录。</p>
<p>实现用户账号的管理，要完成的工作主要有如下几个方面：</p>
<ul>
<li>用户账号的添加、删除与修改。</li>
<li>用户口令的管理。</li>
<li>用户组的管理。</li>
</ul>
<h2 id="什么是用户？"><a href="#什么是用户？" class="headerlink" title="什么是用户？"></a>什么是用户？</h2><p>Linux是一个多用户多任务的分时操作系统，如果要使用系统资源，就必须向系统管理员申请一个账户，然后通过这个账户进入系统。这个账户和用户是一个概念，通过建立不同属性的用户，一方面，可以合理的利用和控制系统资源，另一方面也可以帮助用户组织文件，提供对用户文件的安全性保护。</p>
<p>每个用户都用一个唯一的用户名和用户口令，在登录系统时，只有正确输入了用户名和密码，才能进入系统和自己的主目录。</p>
<blockquote>
<p>什么是用户的主目录？</p>
</blockquote>
<ul>
<li>普通用户：/home/用户名/，所有者和所属组都是此用户，权限是700 </li>
<li>超级用户：/root/，所有者和所属组都是root用户，权限是550 </li>
</ul>
<blockquote>
<p>用户的模板目录是什么？</p>
</blockquote>
<ul>
<li>/etc/skel/</li>
</ul>
<blockquote>
<p>用户的邮箱目录是什么？</p>
</blockquote>
<ul>
<li>/var/spool/mail/用户名/ </li>
</ul>
<h2 id="什么是用户组-群组？"><a href="#什么是用户组-群组？" class="headerlink" title="什么是用户组/群组？"></a>什么是用户组/群组？</h2><p>用户组是具有相同特征用户的逻辑集合。</p>
<p>有时我们需要让多个用户具有相同的权限，比如查看、修改某一个文件的权限，一种方法是分别对多个用户进行文件访问授权，如果有10个用户的话，就需要授权10次，显然这种方法不太合理；另一种方法是建立一个组，让这个组具有查看、修改此文件的权限，然后将所有需要访问此文件的用户放入这个组中，那么所有用户就具有了和组一样的权限。这就是用户组，将用户分组是Linux 系统中对用户进行管理及控制访问权限的一种手段，通过定义用户组，在很大程度上简化了管理工作。</p>
<blockquote>
<p>创建一个Kin用户，同时会创建并把他放到同名的Kin用户组</p>
</blockquote>
<h2 id="用户配置文件"><a href="#用户配置文件" class="headerlink" title="用户配置文件"></a>用户配置文件</h2><h3 id="用户信息文件-etc-passwd"><a href="#用户信息文件-etc-passwd" class="headerlink" title="用户信息文件/etc/passwd"></a>用户信息文件/etc/passwd</h3><p><code>/etc/passwd</code>：用户的配置文件，记录用户的各种信息。组成为：用户名:密码标志:用户标识号:组标识号:注释性描述:主目录:登录Shell</p>
<p><img data-src="https://gitee.com/monkey-HH/picBed/raw/master/picbed/img/202201091353515.png" alt="image-20220109135305477"></p>
<p>下面是详细介绍：</p>
<ul>
<li><p>第1字段：用户名称</p>
</li>
<li><p>第2字段：密码标志 </p>
</li>
<li><p>第3字段：UID（用户ID） </p>
</li>
<li><ul>
<li>0：   超级用户 </li>
<li>1-499：  系统用户（伪用户）</li>
<li>500-65535： 普通用户(centos7 从1000开始计算)</li>
</ul>
</li>
<li><p>第4字段：GID（用户初始组ID）[不推荐修改初始组]</p>
</li>
<li><p>第5字段：用户说明 </p>
</li>
<li><p>第6字段：家目录 </p>
</li>
<li><ul>
<li>普通用户：/home/用户名/ </li>
<li>超级用户：/root/ </li>
</ul>
</li>
<li><p>第7字段：登录之后的Shell</p>
</li>
</ul>
<p><strong>初始组和附加组</strong>：</p>
<ul>
<li><p>初始组：就是指用户一登录就立刻拥有这个用户组的相关权限，每个用户的初始组只能有一个，一般就是和这个用户的用户名相同的组名作为这个用户的初始组。 </p>
</li>
<li><p>附加组：指用户可以加入多个其他的用户组，并拥有这些组的权限，附加组可以有多个。</p>
</li>
</ul>
<h3 id="影子文件-etc-shadow"><a href="#影子文件-etc-shadow" class="headerlink" title="影子文件/etc/shadow"></a><strong>影子文件/etc/shadow</strong></h3><ul>
<li><p><code>/etc/shadow</code>：口令的配置文件。每行的含义:登录名:加密口令:最后次修改时间:最小时间间隔:最大时间间隔:警 告时间:不活动时间:失效时间:标志</p>
</li>
<li><p>第1字段：用户名 </p>
</li>
<li><p>第2字段：加密密码 </p>
</li>
<li><ul>
<li>加密算法升级为SHA512散列加密算法 </li>
<li>如果密码位是“!!”或“*”代表没有密码，不能登录 </li>
</ul>
</li>
<li><p>第3字段：密码最后一次修改日期 </p>
</li>
<li><ul>
<li>使用1970年1月1日作为标准时间，每过一天时间戳加1</li>
</ul>
</li>
<li><p>第4字段：两次密码的修改间隔时间（和第3字段相比） </p>
</li>
<li><p>第5字段：密码有效期（和第3字段相比） </p>
</li>
<li><p>第6字段：密码修改到期前的警告天数（和第5字段相比）</p>
</li>
<li><p>第7字段：密码过期后的宽限天数（和第5 字段相比） </p>
</li>
<li><ul>
<li>0：代表密码过期后立即失效</li>
<li>-1：则代表密码永远不会失效。 </li>
</ul>
</li>
<li><p>第8字段：账号失效时间 </p>
</li>
<li><ul>
<li>要用时间戳表示 </li>
</ul>
</li>
<li><p>第9字段：保留</p>
</li>
</ul>
<p><img data-src="https://gitee.com/monkey-HH/picBed/raw/master/picbed/img/202201091357040.png" alt="image-20220109135716994"></p>
<p><strong>时间戳换算说明</strong>：</p>
<ul>
<li><p>把时间戳换算为日期 </p>
</li>
<li><ul>
<li>date -d “1970-01-01 16066 days” </li>
</ul>
</li>
<li><p>把日期换算为时间戳 </p>
</li>
<li><ul>
<li>echo $(($(date –date=”2014/01/06” +%s)/86400+1))</li>
</ul>
</li>
</ul>
<h3 id="组信息文件-etc-group和组密码文件-etc-gshadow"><a href="#组信息文件-etc-group和组密码文件-etc-gshadow" class="headerlink" title="组信息文件/etc/group和组密码文件 /etc/gshadow"></a>组信息文件/etc/group和组密码文件 /etc/gshadow</h3><ul>
<li><code>/etc/group</code>：组(group)的配置文件，记录Linux包含的组的信息。每行含义:组名:口令:组标识号:组内用户列表<ul>
<li>第一字段：组名 </li>
<li>第二字段：组密码标志 </li>
<li>第三字段：GID </li>
<li>第四字段：组中附加用户</li>
</ul>
</li>
<li>组密码文件/etc/gshadow <ul>
<li>第一字段：组名 </li>
<li>第二字段：组密码 (不推荐使用，可以理解为给组设置个小组长)</li>
<li>第三字段：组管理员用户名 </li>
<li>第四字段：组中附加用户</li>
</ul>
</li>
</ul>
<h2 id="用户、组的管理命令"><a href="#用户、组的管理命令" class="headerlink" title="用户、组的管理命令"></a>用户、组的管理命令</h2><table>
<thead>
<tr>
<th>用户</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>useradd username</td>
<td>创建⽤户</td>
</tr>
<tr>
<td>userdel username</td>
<td>删除⽤户，保留其主目录</td>
</tr>
<tr>
<td>userdel -r username</td>
<td>删除⽤户，同时删除其主目录</td>
</tr>
<tr>
<td>usermod -g group_name user_name</td>
<td>修改⽤户的组</td>
</tr>
<tr>
<td>usermod -aG group_name user_name</td>
<td>将⽤户添加到组</td>
</tr>
<tr>
<td>usermod -s /bin/ksh -d /home/codepig –g dev codesheep</td>
<td>修改⽤户codesheep的登录Shell、主⽬录以及⽤户组</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>用户组</strong></td>
<td></td>
</tr>
<tr>
<td>groupadd group_name</td>
<td>创建⽤户组</td>
</tr>
<tr>
<td>groupdel group_name</td>
<td>删除⽤户组</td>
</tr>
<tr>
<td>groupmod -n new_name old_name</td>
<td>重命名⽤户组</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>切换用户</strong></td>
<td></td>
</tr>
<tr>
<td>su - username</td>
<td>切换用户身份</td>
</tr>
<tr>
<td>sudo</td>
<td>以管理员身份执行</td>
</tr>
<tr>
<td>logout</td>
<td>退出当前用户身份</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td><strong>用户信息</strong></td>
<td></td>
</tr>
<tr>
<td>groups test</td>
<td>查看test⽤户所在的组</td>
</tr>
<tr>
<td>passwd</td>
<td>修改⼝令</td>
</tr>
<tr>
<td>passwd username</td>
<td>修改某⽤户的⼝令</td>
</tr>
<tr>
<td>w</td>
<td>系统当前所有的登录会话及所做的操作</td>
</tr>
<tr>
<td>who</td>
<td>系统当前所有的登录会话</td>
</tr>
<tr>
<td>whoami</td>
<td>显示当前登录有效用户</td>
</tr>
<tr>
<td>id username</td>
<td>查看指定⽤户username信息</td>
</tr>
<tr>
<td>last</td>
<td>查看⽤户登录⽇志</td>
</tr>
<tr>
<td>cat -d: -f1 /etc/passwd</td>
<td>查看系统所有⽤户</td>
</tr>
<tr>
<td>cut -d: -f1 /etc/group</td>
<td>查看系统所有组</td>
</tr>
</tbody></table>
<h1 id="Linux文件权限管理"><a href="#Linux文件权限管理" class="headerlink" title="Linux文件权限管理"></a>Linux文件权限管理</h1><p>在上一节，我们介绍了用户和用户组的概念，我们可以利用用户和用户组，设置文件对不同身份的人的权限。</p>
<p>在普通权限中，用户对文件只有三种身份，就是属主、属组和其他人；每种用户身份拥有读（read）、写（write）和执行（execute）三种权限。</p>
<h2 id="文件属性总览"><a href="#文件属性总览" class="headerlink" title="文件属性总览"></a>文件属性总览</h2><p>我们直接通过命令ls -al可查看当前目录下所有文件的属性：</p>
<img data-src="https://gitee.com/monkey-HH/picBed/raw/master/picbed/img/image-20210828205759649.png" alt="image-20210828205759649" style="zoom: 67%;" />

<p>我们可以看到，一个文件/目录有多个属性，包括权限、链接、拥有者、群组、文件大小、修改日期、文件名，其中后面的三项就字面意思，很容易理解啦，我们讲讲前面的几个属性：</p>
<ul>
<li>拥有者：表示该文件/目录的所有人。</li>
<li>群组：表示该文件/目录的所属组。</li>
<li>权限：表示该文件/目录的所有人、所属组、其他人的权限<ul>
<li>第一个字符代表这个文件是“目录、文件或链接文件等等”：<ul>
<li>当为[ d ]则是目录，例如上表文件名为“.config”的那一行；</li>
<li>当为[ - ]则是文件，例如上表文件名为“initial-setup-ks.cfg”那一行；</li>
<li>若是[ l ]则表示为链接文件（link file）； </li>
<li>若是[ b ]则表示为设备文件里面的可供储存的周边设备（可随机存取设备）； </li>
<li>若是[ c ]则表示为设备文件里面的序列埠设备，例如键盘、鼠标（一次性读取设 备）。 </li>
</ul>
</li>
<li>接下来的字符中，以三个为一组，且均为“rwx” 的三个参数的组合，前三位代表文件拥有者的权限，中间三位代表所属组的权限，后三位代表其他人的权限<ul>
<li>[ r ]代表可读 （read）</li>
<li>[ w ]代表可写（write）</li>
<li>[ x ]代表可执行（execute）。 </li>
<li>如果没有对应权限，该位置就会出现减号[ - ]而已。 </li>
</ul>
</li>
</ul>
</li>
</ul>
<img data-src="https://gitee.com/monkey-HH/picBed/raw/master/picbed/img/image-20210828205909441.png" alt="image-20210828205909441" style="zoom: 50%;" />



<h2 id="文件权限管理命令"><a href="#文件权限管理命令" class="headerlink" title="文件权限管理命令"></a>文件权限管理命令</h2><table>
<thead>
<tr>
<th>命令</th>
<th>介绍</th>
</tr>
</thead>
<tbody><tr>
<td><strong>拥有者</strong></td>
<td></td>
</tr>
<tr>
<td>chown user1 file</td>
<td><strong>改变⽂件的拥有者</strong></td>
</tr>
<tr>
<td>chown -R user1 dir</td>
<td>recursive，意思为递归处理所有的文件及子目录，用于改变⽬录的拥有者属性</td>
</tr>
<tr>
<td><strong>所属组</strong></td>
<td></td>
</tr>
<tr>
<td>chgrp group1 file</td>
<td><strong>改变文件所属组</strong></td>
</tr>
<tr>
<td><strong>同时改拥有者、所属组</strong></td>
<td></td>
</tr>
<tr>
<td>chown user1:group1 file</td>
<td>改变⽂件的拥有者和所属组</td>
</tr>
<tr>
<td><strong>修改权限</strong></td>
<td></td>
</tr>
<tr>
<td>chmod score file</td>
<td>各个权限对应的权重  r:4    w:2     x:1，例如 chmod 777 a.txt   #所有人可读，写，执行</td>
</tr>
<tr>
<td>chmod [选项] file</td>
<td>选项包括3部分：<br/>①要操作的对象，u：拥有者、g：所属组、o：其他人、a：前面三者全部<br/>②增加还是删除权限，+：增加权限、-：删除权限<br/>③要操作的权限，r：读、w：写、x：执行<br/>例子：chmod ugo+r abc.txt       #所有人皆可读取</td>
</tr>
</tbody></table>
<h2 id="ACL权限管理"><a href="#ACL权限管理" class="headerlink" title="ACL权限管理"></a>ACL权限管理</h2><p>ACL 是 Access Control List 的缩写，主要的目的是在提供传统的 owner,group,others 的 read,write,execute 权限之外的细部权限设定。</p>
<p>ACL 可以<strong>针对单一使用者</strong>，单一文件或目录来进行 r,w,x 的权限规范，对于需要特殊权限的使用状况非常有帮助。</p>
<img data-src="https://gitee.com/monkey-HH/picBed/raw/master/picbed/img/202201091515801.png" alt="image-20220109151503737" style="zoom:50%;" />

<p>图 1 的根目录中有一个 /project 目录，这是班级的项目目录。班级中的每个学员都可以访问和修改这个目录，老师也需要对这个目录拥有访问和修改权限，其他班级的学员当然不能访问这个目录。需要怎么规划这个目录的权限呢？应该这样：老师使用 root 用户，作为这个目录的属主，权限为 rwx；班级所有的学员都加入 tgroup 组，使 tgroup 组作为 /project 目录的属组，权限是 rwx；其他人的权限设定为 0。这样这个目录的权限就可以符合我们的项目开发要求了。</p>
<p>有一天，班里来了一位试听的学员 st，她必须能够访问 /project 目录，所以必须对这个目录拥有 r 和 x 权限；但是她又没有学习过以前的课程，所以不能赋予她 w 权限，怕她改错了目录中的内容，所以学员 st 的权限就是 r-x。可是如何分配她的身份呢？变为属主？当然不行，要不 root 该放哪里？加入 tgroup 组 ？也不行，因为 tgroup 组的权限是 rwx，而我们要求学员 st 的权限是 r-x。如果把其他人的权限改为 r-x 呢？这样一来，其他班级的所有学员都可以访问 /project 目录了。</p>
<p>当出现这种情况时，普通权限中的三种身份就不够用了。ACL 权限就是为了解决这个问题的。在使用 ACL 权限给用户 st 陚予权限时，st 既不是 /project 目录的属主，也不是属组，仅仅赋予用户 st 针对此目录的 r-x 权限。这有些类似于 Windows 系统中分配权限的方式，单独指定用户并单独分配权限，这样就解决了用户身份不足的问题。</p>
<p>详细的可以参考：<span class="exturl" data-url="aHR0cDovL2MuYmlhbmNoZW5nLm5ldC92aWV3Lzg2My5odG1s">http://c.biancheng.net/view/863.html</span></p>
<h1 id="Linux网络管理"><a href="#Linux网络管理" class="headerlink" title="Linux网络管理"></a>Linux网络管理</h1><h2 id="命令工具介绍"><a href="#命令工具介绍" class="headerlink" title="命令工具介绍"></a>命令工具介绍</h2><p>主要有两个：</p>
<ul>
<li><code>net-tools</code>：旧！自2001年起，<strong>已停止维护</strong>，CentOS7等新的Linux发行版已经抛弃了该工具，包含ifconfig、route、arp和netstat等命令。</li>
<li><code>iproute2</code>：新！用于取代net-tools。</li>
</ul>
<p>他们的区别如下：</p>
<ul>
<li><code>net-tools</code>：通过procfs(/proc)和ioctl系统调用去访问和改变内核网络配置。</li>
<li><code>iproute2</code>：通过netlink套接字接口与内核通讯。iproute2的用户接口比net-tools显得更加直观，比如，各种网络资源（如link、IP地址、路由和隧道等）均使用合适的对象抽象去定义，使得用户可使用一致的语法去管理不同的对象。</li>
</ul>
<p>如果你仍在使用net-tools，而且尤其需要跟上新版Linux内核中的最新最重要的网络特性的话，那么是时候转到iproute2的阵营了。原因就在于使用iproute2可以做很多net-tools无法做到的事情。</p>
<h3 id="net-tools相关命令"><a href="#net-tools相关命令" class="headerlink" title="net-tools相关命令"></a>net-tools相关命令</h3><p>因为很多系统已经不自带该命令了，因此使用前可能要先下载。net-tools的命令有：</p>
<ul>
<li><span class="exturl" data-url="aHR0cHM6Ly9uZXQtdG9vbHMuc291cmNlZm9yZ2UuaW8vbWFuL2FycC44Lmh0bWw=">arp(8)</span>：操作系统 ARP 缓存 </li>
<li><span class="exturl" data-url="aHR0cHM6Ly9uZXQtdG9vbHMuc291cmNlZm9yZ2UuaW8vbWFuL2hvc3RuYW1lLjEuaHRtbA==">hostname(1)</span>：获取主机名</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9uZXQtdG9vbHMuc291cmNlZm9yZ2UuaW8vbWFuL2lmY29uZmlnLjguaHRtbA==">ifconfig(8)</span>：⭐配置网络接口 </li>
<li>ipmaddr：用于添加、删除、显示多播地址</li>
<li>iptunnel：隧道</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9uZXQtdG9vbHMuc291cmNlZm9yZ2UuaW8vbWFuL21paS10b29sLjguaHRtbA==">mii-tool(8)</span>：查看、操作独立于媒体的界面状态</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9uZXQtdG9vbHMuc291cmNlZm9yZ2UuaW8vbWFuL25hbWVpZi44Lmh0bWw=">nameif(8)</span>：根据 MAC 地址命名网络接口 </li>
<li><span class="exturl" data-url="aHR0cHM6Ly9uZXQtdG9vbHMuc291cmNlZm9yZ2UuaW8vbWFuL25ldHN0YXQuOC5odG1s">netstat(8)</span>：⭐显示网络状态，显示与IP 、TCP 、UDP 和ICMP 协议相关的统计数据，一般用于检验本机各端口的网络连接情况。</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9uZXQtdG9vbHMuc291cmNlZm9yZ2UuaW8vbWFuL3BsaXBjb25maWcuOC5odG1s">plipconfig(8)</span>：微调 PLIP 设备参数 </li>
<li><span class="exturl" data-url="aHR0cHM6Ly9uZXQtdG9vbHMuc291cmNlZm9yZ2UuaW8vbWFuL3JhcnAuOC5odG1s">rarp(8)</span>：操作系统 RARP 表</li>
<li><span class="exturl" data-url="aHR0cHM6Ly9uZXQtdG9vbHMuc291cmNlZm9yZ2UuaW8vbWFuL3JvdXRlLjguaHRtbA==">route(8)</span>：显示/操作 IP 路由表 </li>
<li><span class="exturl" data-url="aHR0cHM6Ly9uZXQtdG9vbHMuc291cmNlZm9yZ2UuaW8vbWFuL3NsYXR0YWNoLjguaHRtbA==">slattach(8)</span>：将网络接口连接到串行线路 </li>
</ul>
<table>
<thead>
<tr>
<th>常用命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>ifconfig  /  ip addr</td>
<td>查看⽹络接⼝属性</td>
</tr>
<tr>
<td>ifconfig eth0</td>
<td>查看某⽹卡的配置</td>
</tr>
<tr>
<td>route -n</td>
<td>查看路由表</td>
</tr>
<tr>
<td>netstat -lntp</td>
<td>查看所有监听端⼝，<strong>查程序跑在哪个端口</strong></td>
</tr>
<tr>
<td>netstat -antp</td>
<td>查看已经建⽴的TCP连接</td>
</tr>
<tr>
<td>netstat -lutp</td>
<td>查看TCP/UDP的状态信息</td>
</tr>
<tr>
<td>ifconfig eth0 192.168.1.1 netmask 255.255.255.0</td>
<td>配置ip地址</td>
</tr>
<tr>
<td>route add -net 0/0 gw Gateway_IP</td>
<td>配置默认⽹关</td>
</tr>
<tr>
<td>route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1</td>
<td>配置静态路由到达⽹络’192.168.0.0/16’</td>
</tr>
<tr>
<td>route del 0/0 gw Gateway_IP</td>
<td>删除静态路由</td>
</tr>
<tr>
<td>hostname</td>
<td>查看主机名</td>
</tr>
</tbody></table>
<h3 id="iproute2命令工具"><a href="#iproute2命令工具" class="headerlink" title="iproute2命令工具"></a>iproute2命令工具</h3><p>主要包括两个命令：</p>
<ul>
<li>ip族：包含多个命令，如ip route 、ip maddr、ip link等等。</li>
<li>ss</li>
</ul>
<p>我们看一张图看看对比：</p>
<img data-src="https://gitee.com/monkey-HH/picBed/raw/master/picbed/img/202201081352728.jpeg" alt="img" style="zoom: 25%;" />



<table>
<thead>
<tr>
<th>说明</th>
<th>net-tools</th>
<th>iproute2</th>
</tr>
</thead>
<tbody><tr>
<td>邻居</td>
<td>arp -na arp</td>
<td>ip neigh</td>
</tr>
<tr>
<td>地址和链路配置</td>
<td>ifconfig</td>
<td>ip link ip addr</td>
</tr>
<tr>
<td>显示全部接口信息 显示IP</td>
<td>ifconfig -a</td>
<td>ip addr show</td>
</tr>
<tr>
<td>帮助</td>
<td>ifconfig –help</td>
<td>ip help</td>
</tr>
<tr>
<td>显示摘要信息</td>
<td>ifconfig -s</td>
<td>ip -s link</td>
</tr>
<tr>
<td>启动指定网络设备/网卡</td>
<td>ifconfig eth0 up</td>
<td>ip link set eth0 up</td>
</tr>
<tr>
<td>组播</td>
<td>ipmaddr</td>
<td>ip maddr</td>
</tr>
<tr>
<td>ip隧道</td>
<td>iptunnel</td>
<td>ip tunnel</td>
</tr>
<tr>
<td>统计</td>
<td>netstat</td>
<td>ss</td>
</tr>
<tr>
<td>显示网络界面信息表单</td>
<td>netstat -i</td>
<td>ip -s link</td>
</tr>
<tr>
<td>显示多重广播功能群组组员名单</td>
<td>netstat -g</td>
<td>ip maddr</td>
</tr>
<tr>
<td>列出监听服务状态</td>
<td>netstat -l</td>
<td>ss -l</td>
</tr>
<tr>
<td>路由表</td>
<td>netstat -r route</td>
<td>ip route</td>
</tr>
<tr>
<td>添加路由</td>
<td>route add</td>
<td>ip route add</td>
</tr>
<tr>
<td>删除路由</td>
<td>route del</td>
<td>ip route del</td>
</tr>
<tr>
<td>查看路由状态</td>
<td>route -n</td>
<td>ip route show</td>
</tr>
<tr>
<td>增删VLAN</td>
<td>vconfig</td>
<td>ip link</td>
</tr>
</tbody></table>
<h3 id="其他常用命令"><a href="#其他常用命令" class="headerlink" title="其他常用命令"></a>其他常用命令</h3><table>
<thead>
<tr>
<th>ifup eth0</th>
<th>启⽤eth0⽹络设备</th>
</tr>
</thead>
<tbody><tr>
<td>PING</td>
<td>测试网络连通性</td>
</tr>
<tr>
<td>ifdown eth0</td>
<td>禁⽤eth0⽹络设备</td>
</tr>
<tr>
<td>iptables -L</td>
<td>查看iptables规则 事实上是防火墙工具</td>
</tr>
<tr>
<td>dhclient eth0</td>
<td>以dhcp模式启⽤eth0</td>
</tr>
<tr>
<td>host <span class="exturl" data-url="aHR0cDovL3d3dy5iYWlkdS5jb20v">www.baidu.com</span></td>
<td>解析主机名</td>
</tr>
<tr>
<td>nslookup <span class="exturl" data-url="aHR0cDovL3d3dy5iYWlkdS5jb20v">www.baidu.com</span></td>
<td>查询DNS记录，查看域名解析是否正常</td>
</tr>
</tbody></table>
<p>更多详细信息可以查看：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2FzdHJvdHljb29uL2FydGljbGUvZGV0YWlscy81MjMxNzI4OA==">https://blog.csdn.net/astrotycoon/article/details/52317288</span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9saW51eC5jbi9hcnRpY2xlLTQzMjYtMS5odG1s">https://linux.cn/article-4326-1.html</span></p>
<h2 id="网络资源下载"><a href="#网络资源下载" class="headerlink" title="网络资源下载"></a>网络资源下载</h2><p>在Linux中，主要通过wget命令下载网络资源，用法也很简单：</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget resourceURL</span><br></pre></td></tr></table></figure>

<p>还有一个方式是<span class="exturl" data-url="aHR0cDovL2FpZXp1LmNvbS9hcnRpY2xlL2xpbnV4X2N1cmxfY29tbWFuZC5odG1s">curl</span>命令：</p>
<ul>
<li>curl是基于URL语法在命令行方式下工作的文件传输工具，它支持FTP，FTPS，HTTP，HTTPS，GOPHER，TELNET，DICT，FILE及LDAP等协议;</li>
<li>curl支持HTTPS认证，并且支持HTTP的POST、PUT等方法， FTP上传， kerberos认证，HTTP上传，代理服务器，cookies，用户名/密码认证， 下载文件断点续传，上载文件断点续传, http代理服务器管道（ proxy tunneling）;</li>
<li>curl还支持IPv6，socks5代理服务器，通过http代理服务器上传文件到FTP服务器等，功能十分强大。</li>
</ul>
<h1 id="Linux系统管理"><a href="#Linux系统管理" class="headerlink" title="Linux系统管理"></a>Linux系统管理</h1><h2 id="Linux磁盘与文件系统管理"><a href="#Linux磁盘与文件系统管理" class="headerlink" title="Linux磁盘与文件系统管理"></a>Linux磁盘与文件系统管理</h2><p>常用命令如下</p>
<table>
<thead>
<tr>
<th>常用命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td><strong>磁盘分区</strong></td>
<td></td>
</tr>
<tr>
<td>fdisk -l</td>
<td>查看所有磁盘分区</td>
</tr>
<tr>
<td>swapon -s</td>
<td>查看所有交换分区</td>
</tr>
<tr>
<td><strong>使用情况</strong></td>
<td></td>
</tr>
<tr>
<td>df -h</td>
<td>查看磁盘使⽤情况及挂载点</td>
</tr>
<tr>
<td>df -hl</td>
<td>同上</td>
</tr>
<tr>
<td>du -sh  /dir</td>
<td><strong>查看占用空间</strong></td>
</tr>
<tr>
<td>du -sk * | sort -rn</td>
<td>从⾼到低依次显示⽂件和⽬录⼤⼩</td>
</tr>
<tr>
<td><strong>挂载/卸载</strong></td>
<td></td>
</tr>
<tr>
<td>mount /dev/hda2 /mnt/hda2</td>
<td>挂载hda2盘</td>
</tr>
<tr>
<td>mount -t ntfs /dev/sdc1 /mnt/usbhd1</td>
<td>指定⽂件系统类型挂载（如ntfs）</td>
</tr>
<tr>
<td>mount -o loop xxx.iso /mnt/cdrom</td>
<td>挂 载 iso ⽂ 件</td>
</tr>
<tr>
<td>umount -v /dev/sda1</td>
<td>通过设备名卸载</td>
</tr>
<tr>
<td>umount -v /mnt/mymnt</td>
<td>通过挂载点卸载</td>
</tr>
<tr>
<td>fuser -km /mnt/hda1</td>
<td>强制卸载(慎⽤)</td>
</tr>
</tbody></table>
<h2 id="Linux服务、任务"><a href="#Linux服务、任务" class="headerlink" title="Linux服务、任务"></a>Linux服务、任务</h2><p>secentos7以后很多服务不再使用service，而是systemctl。</p>
<p>service指令管理的服务在/etc/init.d/查看，绿色的</p>
<p><img data-src="https://gitee.com/monkey-HH/picBed/raw/master/picbed/img/202201071948488.png" alt="image-20220107194843444"></p>
<p>2.systemctl命令<br>systemd是Linux系统最新的初始化系统(init),作用是提高系统的启动速度，尽可能启动较少的进程，尽可能更多进程并发启动。<br>systemd对应的进程管理命令是systemctl</p>
<p>1)systemctl命令兼容了service<br>即systemctl也会去/etc/init.d目录下，查看，执行相关程序</p>
<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl redis start</span><br><span class="line">systemctl redis stop</span><br><span class="line"># 开机自启动</span><br><span class="line">systemctl enable redis</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>服务管理</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>chkconfig –list</td>
<td>列出系统服务</td>
</tr>
<tr>
<td><strong>service</strong></td>
<td></td>
</tr>
<tr>
<td>service &lt;服务名&gt; status</td>
<td><strong>查看</strong>某个服务</td>
</tr>
<tr>
<td>service &lt;服务名&gt; start</td>
<td><strong>启动</strong>某个服务</td>
</tr>
<tr>
<td>service &lt;服务名&gt; stop</td>
<td><strong>终⽌</strong>某个服务</td>
</tr>
<tr>
<td>service &lt;服务名&gt; restart</td>
<td><strong>重启</strong>某个服务</td>
</tr>
<tr>
<td><strong>systemctl</strong></td>
<td></td>
</tr>
<tr>
<td>systemctl status &lt;服务名&gt;</td>
<td><strong>查看</strong>某个服务</td>
</tr>
<tr>
<td>systemctl start &lt;服务名&gt;</td>
<td><strong>启动</strong>某个服务</td>
</tr>
<tr>
<td>systemctl stop &lt;服务名&gt;</td>
<td><strong>终⽌</strong>某个服务</td>
</tr>
<tr>
<td>systemctl restart &lt;服务名&gt;</td>
<td><strong>重启</strong>某个服务</td>
</tr>
<tr>
<td>systemctl enable &lt;服务名&gt;</td>
<td>开机自启</td>
</tr>
<tr>
<td>systemctl disable &lt;服务名&gt;</td>
<td>关闭开机⾃启</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>任务管理</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>crond</td>
<td></td>
</tr>
<tr>
<td>crontab</td>
<td>计划任务</td>
</tr>
<tr>
<td>crontab -l</td>
<td>查看当前⽤户的计划任务</td>
</tr>
<tr>
<td>nohup</td>
<td>后台运行程序</td>
</tr>
<tr>
<td>jobs</td>
<td>查看系统任务</td>
</tr>
</tbody></table>
<h2 id="Linux防火墙管理"><a href="#Linux防火墙管理" class="headerlink" title="Linux防火墙管理"></a>Linux防火墙管理</h2><p> 一、防火墙的开启、关闭、禁用命令</p>
<p>（1）设置开机启用防火墙：systemctl enable firewalld.service</p>
<p>（2）设置开机禁用防火墙：systemctl disable firewalld.service</p>
<p>（3）启动防火墙：systemctl start firewalld</p>
<p>（4）关闭防火墙：systemctl stop firewalld</p>
<p>（5）检查防火墙状态：systemctl status firewalld </p>
<p>二、使用firewall-cmd配置端口</p>
<p>（1）查看防火墙状态：firewall-cmd –state</p>
<p>（2）重新加载配置：firewall-cmd –reload</p>
<p>（3）查看开放的端口：firewall-cmd –list-ports</p>
<p>（4）开启防火墙端口：firewall-cmd –zone=public –add-port=8888/tcp –permanent</p>
<p>　　命令含义：</p>
<p>　　–zone #作用域</p>
<p>　　–add-port=9200/tcp #添加端口，格式为：端口/通讯协议</p>
<p>　　–permanent #永久生效，没有此参数重启后失效</p>
<p>　　<strong>注意：添加端口后，必须用命令firewall-cmd –reload重新加载一遍才会生效</strong>。</p>
<p>（5）关闭防火墙端口：firewall-cmd –zone=public –remove-port=8888/tcp –permanent</p>
<h2 id="Linux进程管理"><a href="#Linux进程管理" class="headerlink" title="Linux进程管理"></a>Linux进程管理</h2><table>
<thead>
<tr>
<th>进程管理</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>ps -ef</td>
<td>查看所有进程</td>
</tr>
<tr>
<td>ps -ef | grep psname</td>
<td>查看特定进程</td>
</tr>
<tr>
<td>kill -s name</td>
<td>杀死指定名称的进程</td>
</tr>
<tr>
<td>kill -s pid</td>
<td>杀死指定pid的进程</td>
</tr>
</tbody></table>
<h2 id="Linux内存管理"><a href="#Linux内存管理" class="headerlink" title="Linux内存管理"></a>Linux内存管理</h2><table>
<thead>
<tr>
<th><strong>内存</strong></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>grep MemTotal /proc/meminfo</td>
<td>查看内存总量</td>
</tr>
<tr>
<td>grep MemFree /proc/meminfo</td>
<td>查看空闲内存量</td>
</tr>
<tr>
<td>free -m</td>
<td>查看内存⽤量和交换区⽤量</td>
</tr>
</tbody></table>
<h2 id="Linux驱动管理"><a href="#Linux驱动管理" class="headerlink" title="Linux驱动管理"></a>Linux驱动管理</h2><p>驱动加载</p>
<p>驱动更新</p>
<p>网卡</p>
<p>显卡</p>
<h2 id="Linux关机-重启"><a href="#Linux关机-重启" class="headerlink" title="Linux关机/重启"></a>Linux关机/重启</h2><p>不管是重启系统还是关闭系统，首先要运行syne命令，把内存中的数据写到磁盘中，不过目前的shutdown/reboot/halt 等命令均已经在关机前进行了syne 。</p>
<table>
<thead>
<tr>
<th>常用命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>shutdown -h now</td>
<td>即刻关机</td>
</tr>
<tr>
<td>shutdown -h 10</td>
<td>10分钟后关机</td>
</tr>
<tr>
<td>shutdown -h 11:00</td>
<td>11：00关机</td>
</tr>
<tr>
<td>shutdown -h +10</td>
<td>预定时间关机（10分钟后）</td>
</tr>
<tr>
<td>shutdown -c</td>
<td>取消指定时间关机</td>
</tr>
<tr>
<td>shutdown -r now</td>
<td>重启</td>
</tr>
<tr>
<td>shutdown -r 10</td>
<td>10分钟之后重启</td>
</tr>
<tr>
<td>shutdown -r 11:00</td>
<td>定时重启</td>
</tr>
<tr>
<td>reboot</td>
<td>重启</td>
</tr>
<tr>
<td>init 6</td>
<td>重启</td>
</tr>
<tr>
<td>init 0</td>
<td>⽴刻关机</td>
</tr>
<tr>
<td>telinit 0</td>
<td>关机</td>
</tr>
<tr>
<td>poweroff</td>
<td>⽴刻关机</td>
</tr>
<tr>
<td>halt</td>
<td>关机</td>
</tr>
<tr>
<td>sync</td>
<td>buff数据同步到磁盘</td>
</tr>
</tbody></table>
<h2 id="Linux系统信息查询"><a href="#Linux系统信息查询" class="headerlink" title="Linux系统信息查询"></a>Linux系统信息查询</h2><table>
<thead>
<tr>
<th>常用命令</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>uname -a</td>
<td>查看内核/OS/CPU信息</td>
</tr>
<tr>
<td>uname -r</td>
<td>查看内核版本</td>
</tr>
<tr>
<td>uname -m</td>
<td>查看处理器架构</td>
</tr>
<tr>
<td>arch</td>
<td>查看处理器架构</td>
</tr>
<tr>
<td>hostname</td>
<td>查看计算机名</td>
</tr>
<tr>
<td>cat /proc/version</td>
<td>查看linux版本信息</td>
</tr>
<tr>
<td>cat /proc/cpuinfo</td>
<td>查看CPU信息</td>
</tr>
<tr>
<td>cat /proc/interrupts</td>
<td>查看中断</td>
</tr>
<tr>
<td>cat /proc/loadavg</td>
<td>查看系统负载</td>
</tr>
<tr>
<td>uptime</td>
<td>查看系统运⾏时间、⽤户数、负载</td>
</tr>
<tr>
<td>env</td>
<td>查看系统的环境变量</td>
</tr>
<tr>
<td>lsusb -tv</td>
<td>查看系统USB设备信息</td>
</tr>
<tr>
<td>lspci -tv</td>
<td>查看系统PCI设备信息</td>
</tr>
<tr>
<td>lsmod</td>
<td>查看已加载的系统模块</td>
</tr>
<tr>
<td>date</td>
<td>显示系统时间</td>
</tr>
<tr>
<td>cal</td>
<td>显示⽇历</td>
</tr>
<tr>
<td>top</td>
<td>动态显示cpu/内存/进程等情况</td>
</tr>
<tr>
<td>vmstat 1 20</td>
<td>每1秒采⼀次系统状态，采20次</td>
</tr>
<tr>
<td>iostat</td>
<td>查看io读写/cpu使⽤情况</td>
</tr>
<tr>
<td>sar -u 1 10</td>
<td>查询cpu使⽤情况（1秒⼀次，共10次）</td>
</tr>
<tr>
<td>sar -d 1 10</td>
<td>查询磁盘性能</td>
</tr>
<tr>
<td>history</td>
<td>显示操作命令历史</td>
</tr>
<tr>
<td>help</td>
<td>帮助</td>
</tr>
<tr>
<td>alias</td>
<td>别名</td>
</tr>
</tbody></table>
<h1 id="Linux的Shell基础"><a href="#Linux的Shell基础" class="headerlink" title="Linux的Shell基础"></a>Linux的Shell基础</h1><p>——to be updated</p>
<h1 id="Linux的Shell编程"><a href="#Linux的Shell编程" class="headerlink" title="Linux的Shell编程"></a>Linux的Shell编程</h1><p>——to be updated</p>
<h1 id="Linux系统启动管理"><a href="#Linux系统启动管理" class="headerlink" title="Linux系统启动管理"></a>Linux系统启动管理</h1><p>——to be updated</p>
<h1 id="x-友情链接"><a href="#x-友情链接" class="headerlink" title="x.友情链接"></a>x.友情链接</h1><ul>
<li><span class="exturl" data-url="aHR0cDovL2xpbnV4LnZiaXJkLm9yZy9saW51eF9iYXNpYy8=">鸟叔的私房菜</span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9saW51eC5jbi8=">Linux中国</span></li>
<li><span class="exturl" data-url="aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvVk5VZEZGcy13Q25aTzdFd1lOVjBFUQ==">https://mp.weixin.qq.com/s/VNUdFFs-wCnZO7EwYNV0EQ</span></li>
</ul>
<p>一些安装教程分享：</p>
<ul>
<li><p>mongodb安装(yum)：<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vdGlhbnlhbW9vbi9wLzk4NjA2NTYuaHRtbA==">https://www.cnblogs.com/tianyamoon/p/9860656.html</span></p>
</li>
<li><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTA5OTM1MTQvYXJ0aWNsZS9kZXRhaWxzLzgyOTI2NTE0">Linux下java的安装</span></p>
</li>
<li><p>nginx用的tar源码包，在opt下解压，安装目录在/usr/local/nginx，</p>
</li>
<li><p>node装在了/opt里，是直接二进制包安装的，所以/usr/local里没有，</p>
</li>
<li><p>´ssh建议改端口，默认是22，否则有可能遇上暴力破解的情况</p>
<p>´部署bbr，bbr是个TCP拥塞控制算法，Google写的，能有效提高峰值速度，但并不能改善延迟</p>
</li>
</ul>

      <div class="tags">
          <a href="/tags/Linux/" rel="tag"><i class="ic i-tag"></i> Linux</a>
      </div>
  </div>

   <footer>

    <div class="meta">
  <span class="item">
    <span class="icon">
      <i class="ic i-calendar-check"></i>
    </span>
    <span class="text">Edited on</span>
    <time title="Modified: 2022-01-09 17:44:22" itemprop="dateModified" datetime="2022-01-09T17:44:22+08:00">2022-01-09</time>
  </span>
  <span id="BackEnd/Linux/BackEnd/Linux/Linux基础知识" class="item leancloud_visitors" data-flag-title="Linux基础知识" title="Views">
      <span class="icon">
        <i class="ic i-eye"></i>
      </span>
      <span class="text">Views</span>
      <span class="leancloud-visitors-count"></span>
      <span class="text">times</span>
  </span>
</div>

      

<div id="copyright">
<ul>
  <li class="author">
    <strong>Post author:  </strong>Monkey-HH <i class="ic i-at"><em>@</em></i>
  </li>
  <li class="link">
    <strong>Post link: </strong>
    <a href="https://monkeyhh.top/BackEnd/Linux/BackEnd/Linux/Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86" title="Linux基础知识">https://monkeyhh.top/BackEnd/Linux/BackEnd/Linux/Linux基础知识</a>
  </li>
  <li class="license">
    <strong>Copyright Notice:  </strong>All articles in this blog are licensed under <span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9kZWVkLnpo"><i class="ic i-creative-commons"><em>(CC)</em></i>BY-NC-SA</span> unless stating additionally.
  </li>
</ul>
</div>

  </footer>

</article>

  </div>
  

<div class="post-nav">
    <div class="item left">
      

  <a href="/ComputerBasics/Operating-System/ComputerBasics/Operating_System/%E7%A3%81%E7%9B%98%E4%B8%8E%E5%B8%B8%E8%A7%81%E7%A3%81%E7%9B%98%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95" itemprop="url" rel="prev" data-background-image="https:&#x2F;&#x2F;gitee.com&#x2F;monkey-HH&#x2F;picBed&#x2F;raw&#x2F;master&#x2F;picbed&#x2F;img&#x2F;202112302000492.png" title="磁盘与常见磁盘调度算法">
  <span class="type">Previous Post</span>
  <span class="category"><i class="ic i-flag"></i> Operating_System</span>
  <h3>磁盘与常见磁盘调度算法</h3>
  </a>

    </div>
    <div class="item right">
      

  <a href="/BackEnd/Linux/BackEnd/Linux/Linux%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85" itemprop="url" rel="next" data-background-image="https:&#x2F;&#x2F;gitee.com&#x2F;monkey-HH&#x2F;picBed&#x2F;raw&#x2F;master&#x2F;picbed&#x2F;img&#x2F;202112301958270.jpeg" title="Linux系统的安装">
  <span class="type">Next Post</span>
  <span class="category"><i class="ic i-flag"></i> Linux</span>
  <h3>Linux系统的安装</h3>
  </a>

    </div>
</div>

  
  <div class="wrap" id="comments"></div>


        </div>
        <div id="sidebar">
          

<div class="inner">

  <div class="panels">
    <div class="inner">
      <div class="contents panel pjax" data-title="Contents">
          <ol class="toc"><li class="toc-item toc-level-1"><a class="toc-link" href="#%E5%BC%95%E8%A8%80"><span class="toc-number">1.</span> <span class="toc-text">引言</span></a></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Linux%E4%BB%8B%E7%BB%8D"><span class="toc-number">2.</span> <span class="toc-text">Linux介绍</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%8F%91%E5%B1%95%E5%8E%86%E5%8F%B2"><span class="toc-number">2.1.</span> <span class="toc-text">发展历史</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E7%89%B9%E7%82%B9%E5%92%8C%E4%BC%98%E5%8A%BF"><span class="toc-number">2.2.</span> <span class="toc-text">特点和优势</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF"><span class="toc-number">2.3.</span> <span class="toc-text">应用场景</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%B8%B8%E8%A7%81Linux%E5%8F%91%E8%A1%8C%E7%89%88"><span class="toc-number">2.4.</span> <span class="toc-text">常见Linux发行版</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E4%BD%95%E4%B8%BA%E5%BC%80%E6%BA%90%E3%80%81GNU"><span class="toc-number">2.5.</span> <span class="toc-text">何为开源、GNU</span></a></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Linux%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86"><span class="toc-number">3.</span> <span class="toc-text">Linux文件与目录管理</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E4%BB%8B%E7%BB%8D"><span class="toc-number">3.1.</span> <span class="toc-text">目录结构介绍</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E6%96%87%E4%BB%B6%E6%9F%A5%E7%9C%8B%E4%B8%8E%E5%A4%84%E7%90%86"><span class="toc-number">3.2.</span> <span class="toc-text">文件查看与处理</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E6%96%87%E4%BB%B6%E6%89%93%E5%8C%85%E3%80%81%E5%8E%8B%E7%BC%A9%E5%92%8C%E8%A7%A3%E5%8E%8B"><span class="toc-number">3.3.</span> <span class="toc-text">文件打包、压缩和解压</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E8%BD%AF%E9%93%BE%E6%8E%A5%E5%92%8C%E7%A1%AC%E9%93%BE%E6%8E%A5"><span class="toc-number">3.4.</span> <span class="toc-text">软链接和硬链接</span></a></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Linux%E4%B8%AD%E7%9A%84vi%E4%B8%8Evim"><span class="toc-number">4.</span> <span class="toc-text">Linux中的vi与vim</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F"><span class="toc-number">4.1.</span> <span class="toc-text">命令模式</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E7%BC%96%E8%BE%91%E6%A8%A1%E5%BC%8F"><span class="toc-number">4.2.</span> <span class="toc-text">编辑模式</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F"><span class="toc-number">4.3.</span> <span class="toc-text">命令行命令模式</span></a></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Linux%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E7%AE%A1%E7%90%86"><span class="toc-number">5.</span> <span class="toc-text">Linux软件安装与管理</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86"><span class="toc-number">5.1.</span> <span class="toc-text">基础知识</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#tar%E5%8C%85%E5%BD%A2%E5%BC%8F%E5%AE%89%E8%A3%85"><span class="toc-number">5.2.</span> <span class="toc-text">tar包形式安装</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#tar-gz%E7%AD%89%E5%BD%A2%E5%BC%8F%E7%9A%84%E6%BA%90%E4%BB%A3%E7%A0%81%E5%8C%85"><span class="toc-number">5.2.1.</span> <span class="toc-text">*.tar.gz等形式的源代码包</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#tar-gz%E7%AD%89%E5%BD%A2%E5%BC%8F%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%8C%85"><span class="toc-number">5.2.2.</span> <span class="toc-text">*.tar.gz等形式的二进制包</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E8%AE%BE%E7%BD%AEPath%E5%8F%98%E9%87%8F"><span class="toc-number">5.2.2.1.</span> <span class="toc-text">设置Path变量</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%A6%82%E4%BD%95%E5%88%86%E8%BE%A8%E6%98%AF%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%8C%85%E8%BF%98%E6%98%AF%E6%BA%90%E4%BB%A3%E7%A0%81%E5%8C%85"><span class="toc-number">5.2.3.</span> <span class="toc-text">如何分辨是二进制包还是源代码包</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%AE%89%E8%A3%85%E8%B7%AF%E5%BE%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%E2%AD%90"><span class="toc-number">5.2.4.</span> <span class="toc-text">安装路径注意事项⭐</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8%E5%BD%A2%E5%BC%8F%E5%AE%89%E8%A3%85"><span class="toc-number">5.3.</span> <span class="toc-text">软件包管理器形式安装</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#Centos%E7%AD%89%E5%B9%B3%E5%8F%B0"><span class="toc-number">5.3.1.</span> <span class="toc-text">Centos等平台</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#RPM%EF%BC%88RPM-Package-Manager%EF%BC%89"><span class="toc-number">5.3.1.1.</span> <span class="toc-text">RPM（RPM Package Manager）</span></a><ol class="toc-child"><li class="toc-item toc-level-5"><a class="toc-link" href="#Linux-RPM%E5%8C%85%E7%BB%9F%E4%B8%80%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99"><span class="toc-number">5.3.1.1.1.</span> <span class="toc-text">Linux RPM包统一命名规则</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#Linux-RPM%E5%8C%85%E5%88%86%E7%B1%BB"><span class="toc-number">5.3.1.1.2.</span> <span class="toc-text">Linux  RPM包分类</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#RPM%E5%8C%85%E9%BB%98%E8%AE%A4%E5%AE%89%E8%A3%85%E8%B7%AF%E5%BE%84"><span class="toc-number">5.3.1.1.3.</span> <span class="toc-text">RPM包默认安装路径</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#rpm%E5%8C%85%E5%AE%89%E8%A3%85%E3%80%81%E5%8D%B8%E8%BD%BD%E3%80%81%E5%8D%87%E7%BA%A7"><span class="toc-number">5.3.1.1.4.</span> <span class="toc-text">rpm包安装、卸载、升级</span></a><ol class="toc-child"><li class="toc-item toc-level-6"><a class="toc-link" href="#rpm%E5%BD%A2%E5%BC%8F%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BD%AF%E4%BB%B6%E5%8C%85"><span class="toc-number">5.3.1.1.4.1.</span> <span class="toc-text">*.rpm形式的二进制软件包</span></a></li><li class="toc-item toc-level-6"><a class="toc-link" href="#src-rpm%E5%BD%A2%E5%BC%8F%E7%9A%84%E6%BA%90%E4%BB%A3%E7%A0%81%E8%BD%AF%E4%BB%B6%E5%8C%85"><span class="toc-number">5.3.1.1.4.2.</span> <span class="toc-text">***.src.rpm形式的源代码软件包**</span></a></li></ol></li><li class="toc-item toc-level-5"><a class="toc-link" href="#%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4"><span class="toc-number">5.3.1.1.5.</span> <span class="toc-text">常用命令</span></a></li></ol></li><li class="toc-item toc-level-4"><a class="toc-link" href="#YUM%EF%BC%88Yellow-dog-Updater%EF%BC%89"><span class="toc-number">5.3.1.2.</span> <span class="toc-text">YUM（Yellow dog Updater）</span></a><ol class="toc-child"><li class="toc-item toc-level-5"><a class="toc-link" href="#YUM%E8%AF%AD%E6%B3%95"><span class="toc-number">5.3.1.2.1.</span> <span class="toc-text">YUM语法</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#yum%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4"><span class="toc-number">5.3.1.2.2.</span> <span class="toc-text">yum常用命令</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#YUM%E5%8C%85%E9%BB%98%E8%AE%A4%E5%AE%89%E8%A3%85%E8%B7%AF%E5%BE%84"><span class="toc-number">5.3.1.2.3.</span> <span class="toc-text">YUM包默认安装路径</span></a></li></ol></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#Ubuntu%E7%AD%89%E5%B9%B3%E5%8F%B0"><span class="toc-number">5.3.2.</span> <span class="toc-text">Ubuntu等平台</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#DPKG"><span class="toc-number">5.3.2.1.</span> <span class="toc-text">DPKG</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#APT"><span class="toc-number">5.3.2.2.</span> <span class="toc-text">APT</span></a></li></ol></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E4%B8%8D%E5%90%8C%E5%AE%89%E8%A3%85%E6%96%B9%E5%BC%8F%E7%9A%84%E5%8C%BA%E5%88%AB"><span class="toc-number">5.4.</span> <span class="toc-text">不同安装方式的区别</span></a></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Linux%E7%94%A8%E6%88%B7%E5%92%8C%E7%BE%A4%E7%BB%84%E7%AE%A1%E7%90%86"><span class="toc-number">6.</span> <span class="toc-text">Linux用户和群组管理</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E4%BB%80%E4%B9%88%E6%98%AF%E7%94%A8%E6%88%B7%EF%BC%9F"><span class="toc-number">6.1.</span> <span class="toc-text">什么是用户？</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E4%BB%80%E4%B9%88%E6%98%AF%E7%94%A8%E6%88%B7%E7%BB%84-%E7%BE%A4%E7%BB%84%EF%BC%9F"><span class="toc-number">6.2.</span> <span class="toc-text">什么是用户组&#x2F;群组？</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6"><span class="toc-number">6.3.</span> <span class="toc-text">用户配置文件</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E6%96%87%E4%BB%B6-etc-passwd"><span class="toc-number">6.3.1.</span> <span class="toc-text">用户信息文件&#x2F;etc&#x2F;passwd</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%BD%B1%E5%AD%90%E6%96%87%E4%BB%B6-etc-shadow"><span class="toc-number">6.3.2.</span> <span class="toc-text">影子文件&#x2F;etc&#x2F;shadow</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E7%BB%84%E4%BF%A1%E6%81%AF%E6%96%87%E4%BB%B6-etc-group%E5%92%8C%E7%BB%84%E5%AF%86%E7%A0%81%E6%96%87%E4%BB%B6-etc-gshadow"><span class="toc-number">6.3.3.</span> <span class="toc-text">组信息文件&#x2F;etc&#x2F;group和组密码文件 &#x2F;etc&#x2F;gshadow</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E7%94%A8%E6%88%B7%E3%80%81%E7%BB%84%E7%9A%84%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4"><span class="toc-number">6.4.</span> <span class="toc-text">用户、组的管理命令</span></a></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Linux%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86"><span class="toc-number">7.</span> <span class="toc-text">Linux文件权限管理</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7%E6%80%BB%E8%A7%88"><span class="toc-number">7.1.</span> <span class="toc-text">文件属性总览</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E5%91%BD%E4%BB%A4"><span class="toc-number">7.2.</span> <span class="toc-text">文件权限管理命令</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#ACL%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86"><span class="toc-number">7.3.</span> <span class="toc-text">ACL权限管理</span></a></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Linux%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86"><span class="toc-number">8.</span> <span class="toc-text">Linux网络管理</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D"><span class="toc-number">8.1.</span> <span class="toc-text">命令工具介绍</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#net-tools%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4"><span class="toc-number">8.1.1.</span> <span class="toc-text">net-tools相关命令</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#iproute2%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7"><span class="toc-number">8.1.2.</span> <span class="toc-text">iproute2命令工具</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%85%B6%E4%BB%96%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4"><span class="toc-number">8.1.3.</span> <span class="toc-text">其他常用命令</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E7%BD%91%E7%BB%9C%E8%B5%84%E6%BA%90%E4%B8%8B%E8%BD%BD"><span class="toc-number">8.2.</span> <span class="toc-text">网络资源下载</span></a></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Linux%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86"><span class="toc-number">9.</span> <span class="toc-text">Linux系统管理</span></a><ol class="toc-child"><li class="toc-item toc-level-2"><a class="toc-link" href="#Linux%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86"><span class="toc-number">9.1.</span> <span class="toc-text">Linux磁盘与文件系统管理</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#Linux%E6%9C%8D%E5%8A%A1%E3%80%81%E4%BB%BB%E5%8A%A1"><span class="toc-number">9.2.</span> <span class="toc-text">Linux服务、任务</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#Linux%E9%98%B2%E7%81%AB%E5%A2%99%E7%AE%A1%E7%90%86"><span class="toc-number">9.3.</span> <span class="toc-text">Linux防火墙管理</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#Linux%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86"><span class="toc-number">9.4.</span> <span class="toc-text">Linux进程管理</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#Linux%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86"><span class="toc-number">9.5.</span> <span class="toc-text">Linux内存管理</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#Linux%E9%A9%B1%E5%8A%A8%E7%AE%A1%E7%90%86"><span class="toc-number">9.6.</span> <span class="toc-text">Linux驱动管理</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#Linux%E5%85%B3%E6%9C%BA-%E9%87%8D%E5%90%AF"><span class="toc-number">9.7.</span> <span class="toc-text">Linux关机&#x2F;重启</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#Linux%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF%E6%9F%A5%E8%AF%A2"><span class="toc-number">9.8.</span> <span class="toc-text">Linux系统信息查询</span></a></li></ol></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Linux%E7%9A%84Shell%E5%9F%BA%E7%A1%80"><span class="toc-number">10.</span> <span class="toc-text">Linux的Shell基础</span></a></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Linux%E7%9A%84Shell%E7%BC%96%E7%A8%8B"><span class="toc-number">11.</span> <span class="toc-text">Linux的Shell编程</span></a></li><li class="toc-item toc-level-1"><a class="toc-link" href="#Linux%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E7%AE%A1%E7%90%86"><span class="toc-number">12.</span> <span class="toc-text">Linux系统启动管理</span></a></li><li class="toc-item toc-level-1"><a class="toc-link" href="#x-%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5"><span class="toc-number">13.</span> <span class="toc-text">x.友情链接</span></a></li></ol>
      </div>
      <div class="related panel pjax" data-title="Related">
        <ul>
          <li><a href="/BackEnd/Linux/BackEnd/Linux/Linux%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85" rel="bookmark" title="Linux系统的安装">Linux系统的安装</a></li><li class="active"><a href="/BackEnd/Linux/BackEnd/Linux/Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86" rel="bookmark" title="Linux基础知识">Linux基础知识</a></li>
        </ul>
      </div>
      <div class="overview panel" data-title="Overview">
        <div class="author" itemprop="author" itemscope itemtype="http://schema.org/Person">
  <img class="image" itemprop="image" alt="Monkey-HH"
      data-src="/images/avatar.jpg">
  <p class="name" itemprop="name">Monkey-HH</p>
  <div class="description" itemprop="description">Learn, share, make progress</div>
</div>

<nav class="state">
    <div class="item posts">
      <a href="/archives/">
        <span class="count">39</span>
        <span class="name">posts</span>
      </a>
    </div>
    <div class="item categories">
      <a href="/categories/">
        <span class="count">16</span>
        <span class="name">categories</span>
      </a>
    </div>
    <div class="item tags">
      <a href="/tags/">
        <span class="count">19</span>
        <span class="name">tags</span>
      </a>
    </div>
</nav>

<div class="social">
      <span class="exturl item github" data-url="aHR0cHM6Ly9naXRodWIuY29tL21vbmtleS1ISA==" title="https:&#x2F;&#x2F;github.com&#x2F;monkey-HH"><i class="ic i-github"></i></span>
      <span class="exturl item email" data-url="bWFpbHRvOmhoanNjYXVAMTYzLmNvbQ==" title="mailto:hhjscau@163.com"><i class="ic i-envelope"></i></span>
</div>

<ul class="menu">
  
    
  <li class="item">
    <a href="/" rel="section"><i class="ic i-home"></i>Home</a>
  </li>

        
  <li class="item dropdown">
      <a href="javascript:void(0);"><i class="ic i-feather"></i>Posts</a>
    <ul class="submenu">

        
  <li class="item">
    <a href="/categories/" rel="section"><i class="ic i-th"></i>Categories</a>
  </li>

        
  <li class="item">
    <a href="/tags/" rel="section"><i class="ic i-tags"></i>Tags</a>
  </li>

  </ul>
    
  <li class="item">
    <a href="/friends/" rel="section"><i class="ic i-heart"></i>Friends</a>
  </li>

    
  <li class="item">
    <a href="/about/" rel="section"><i class="ic i-user"></i>About</a>
  </li>

    
  <li class="item">
    <a href="/links/" rel="section"><i class="ic i-magic"></i>Links</a>
  </li>


</ul>

      </div>
    </div>
  </div>

  <ul id="quick">
    <li class="prev pjax">
        <a href="/ComputerBasics/Operating-System/ComputerBasics/Operating_System/%E7%A3%81%E7%9B%98%E4%B8%8E%E5%B8%B8%E8%A7%81%E7%A3%81%E7%9B%98%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95" rel="prev" title="Previous Post"><i class="ic i-chevron-left"></i></a>
    </li>
    <li class="up"><i class="ic i-arrow-up"></i></li>
    <li class="down"><i class="ic i-arrow-down"></i></li>
    <li class="next pjax">
        <a href="/BackEnd/Linux/BackEnd/Linux/Linux%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85" rel="next" title="Next Post"><i class="ic i-chevron-right"></i></a>
    </li>
    <li class="percent"></li>
  </ul>
</div>


        </div>
        <div class="dimmer"></div>
      </div>
    </main>
    <footer id="footer">
      <div class="inner">
        <div class="widgets">
          
<div class="rpost pjax">
  <h2>Random Posts</h2>
  <ul>
      
  <li class="item">
    
<div class="breadcrumb">
<a href="/categories/FrontEnd/" title="In FrontEnd">FrontEnd</a>
<i class="ic i-angle-right"></i>
<a href="/categories/FrontEnd/JavaScript/" title="In JavaScript">JavaScript</a>
</div>

    <span><a href="/FrontEnd/JavaScript/FrontEnd/JavaScript/JavaScript%E4%B8%AD%E7%9A%84%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B%E6%96%B9%E6%A1%88" title="JavaScript中的异步编程方案">JavaScript中的异步编程方案</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/categories/Operation-Maintenance/" title="In Operation & Maintenance">Operation & Maintenance</a>
</div>

    <span><a href="/Operation-Maintenance/Operation%20&%20Maintenance/Nginx%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8" title="Nginx基础入门">Nginx基础入门</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/categories/FrontEnd/" title="In FrontEnd">FrontEnd</a>
<i class="ic i-angle-right"></i>
<a href="/categories/FrontEnd/CSS/" title="In CSS">CSS</a>
</div>

    <span><a href="/FrontEnd/CSS/FrontEnd/CSS/CSS%E5%B8%83%E5%B1%80%E6%80%BB%E7%BB%93" title="CSS布局总结">CSS布局总结</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/categories/FrontEnd/" title="In FrontEnd">FrontEnd</a>
<i class="ic i-angle-right"></i>
<a href="/categories/FrontEnd/JavaScript/" title="In JavaScript">JavaScript</a>
</div>

    <span><a href="/FrontEnd/JavaScript/FrontEnd/JavaScript/JavaScript%E5%B8%B8%E7%94%A8%E7%BB%A7%E6%89%BF%E6%96%B9%E6%A1%88" title="JavaScript常用继承方案">JavaScript常用继承方案</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/categories/FrontEnd/" title="In FrontEnd">FrontEnd</a>
<i class="ic i-angle-right"></i>
<a href="/categories/FrontEnd/Browser/" title="In Browser">Browser</a>
</div>

    <span><a href="/FrontEnd/Browser/FrontEnd/Browser/%E6%B5%8F%E8%A7%88%E5%99%A8Web%E5%AE%89%E5%85%A8%E6%94%BB%E9%98%B2" title="浏览器Web安全攻防">浏览器Web安全攻防</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/categories/FrontEnd/" title="In FrontEnd">FrontEnd</a>
<i class="ic i-angle-right"></i>
<a href="/categories/FrontEnd/JavaScript/" title="In JavaScript">JavaScript</a>
</div>

    <span><a href="/FrontEnd/JavaScript/FrontEnd/JavaScript/%E3%80%90%E6%89%8B%E6%92%95JavaScript%E7%B3%BB%E5%88%97%E3%80%91JavaScript%E4%B8%AD%E7%9A%84%E6%B5%85%E6%8B%B7%E8%B4%9D%E5%92%8C%E6%B7%B1%E6%8B%B7%E8%B4%9D" title="【手撕JavaScript系列】JavaScript中的浅拷贝和深拷贝">【手撕JavaScript系列】JavaScript中的浅拷贝和深拷贝</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/categories/FrontEnd/" title="In FrontEnd">FrontEnd</a>
<i class="ic i-angle-right"></i>
<a href="/categories/FrontEnd/JavaScript/" title="In JavaScript">JavaScript</a>
</div>

    <span><a href="/FrontEnd/JavaScript/FrontEnd/JavaScript/jQuery%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%85%A5%E9%97%A8" title="jQuery基础知识入门">jQuery基础知识入门</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/categories/FrontEnd/" title="In FrontEnd">FrontEnd</a>
<i class="ic i-angle-right"></i>
<a href="/categories/FrontEnd/JavaScript/" title="In JavaScript">JavaScript</a>
</div>

    <span><a href="/FrontEnd/JavaScript/FrontEnd/JavaScript/JavaScript%E4%BD%9C%E7%94%A8%E5%9F%9F%E4%B8%8E%E9%97%AD%E5%8C%85" title="JavaScript作用域与闭包">JavaScript作用域与闭包</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/categories/FrontEnd/" title="In FrontEnd">FrontEnd</a>
<i class="ic i-angle-right"></i>
<a href="/categories/FrontEnd/JavaScript/" title="In JavaScript">JavaScript</a>
</div>

    <span><a href="/FrontEnd/JavaScript/FrontEnd/JavaScript/JavaScript%E5%8E%9F%E5%BD%A2%E4%B8%8E%E5%8E%9F%E5%9E%8B%E9%93%BE" title="JavaScript原型与原型链">JavaScript原型与原型链</a></span>
  </li>

      
  <li class="item">
    
<div class="breadcrumb">
<a href="/categories/FrontEnd/" title="In FrontEnd">FrontEnd</a>
<i class="ic i-angle-right"></i>
<a href="/categories/FrontEnd/Browser/" title="In Browser">Browser</a>
</div>

    <span><a href="/FrontEnd/Browser/FrontEnd/Browser/%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AD%98%E5%82%A8" title="客户端存储">客户端存储</a></span>
  </li>

  </ul>
</div>
<div>
  <h2>Recent Comments</h2>
  <ul class="leancloud-recent-comment"></ul>
</div>

        </div>
        <div class="status">
  <div class="copyright">
    
    &copy; 2021 – 
    <span itemprop="copyrightYear">2022</span>
    <span class="with-love">
      <i class="ic i-sakura rotate"></i>
    </span>
    <span class="author" itemprop="copyrightHolder">Monkey-HH @ Monkey's Blog</span>
  </div>
  <div class="count">
    <span class="post-meta-item-icon">
      <i class="ic i-chart-area"></i>
    </span>
    <span title="Symbols count total">522k words</span>

    <span class="post-meta-divider">|</span>
    <span class="post-meta-item-icon">
      <i class="ic i-coffee"></i>
    </span>
    <span title="Reading time total">7:55</span>
  </div>
  <div class="powered-by">
    Powered by <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">Hexo</span> & Theme.<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYQ==">Shoka</span>
  </div>
</div>

      </div>
    </footer>
  </div>
<script data-config type="text/javascript">
  var LOCAL = {
    path: 'BackEnd/Linux/BackEnd/Linux/Linux基础知识',
    favicon: {
      show: "（●´3｀●）Goooood",
      hide: "(´Д｀)Booooom"
    },
    search : {
      placeholder: "Search for Posts",
      empty: "We didn't find any results for the search: ${query}",
      stats: "${hits} results found in ${time} ms"
    },
    valine: true,fancybox: true,copyright: 'Copied to clipboard successfully! <br> All articles in this blog are licensed under <i class="ic i-creative-commons"></i>BY-NC-SA.',
    ignores : [
      function(uri) {
        return uri.includes('#');
      },
      function(uri) {
        return new RegExp(LOCAL.path+"$").test(uri);
      }
    ]
  };
</script>

<script src="https://cdn.polyfill.io/v2/polyfill.js"></script>

<script src="//cdn.jsdelivr.net/combine/npm/pace-js@1.0.2/pace.min.js,npm/pjax@0.2.8/pjax.min.js,npm/whatwg-fetch@3.4.0/dist/fetch.umd.min.js,npm/animejs@3.2.0/lib/anime.min.js,npm/algoliasearch@4/dist/algoliasearch-lite.umd.js,npm/instantsearch.js@4/dist/instantsearch.production.min.js,npm/lozad@1/dist/lozad.min.js,npm/quicklink@2/dist/quicklink.umd.js"></script>

<script src="/js/app.js?v=0.2.5"></script>




</body>
</html>
